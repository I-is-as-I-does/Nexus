{"version":3,"file":"js/NxCore.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACO;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACLP;AACA;AACqE;AACf;AACtD;AACO;AACA,uBAAuB,oFAAW;AAClC,wBAAwB,mEAAa;AACrC;AACP;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AClBA;AACwE;AACP;AACN;AACE;AAC7D;AACO;AACP;AACA,oBAAoB,wDAAY;AAChC;AACA;AACA,qBAAqB,uDAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mEAAa,CAAC,0DAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+DAAS;AACrC;AACA;AACA;AACA,mBAAmB,0DAAc;AACjC,UAAU,uFAAc;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,0DAAkB;AACxB,iBAAiB,0DAAkB;AACnC;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AACgG;AACtB;AACpC;AACtC;AACmF;AAC3B;AACxD;AACA;AACA;AACO;AACP,EAAE,0FAAe;AACjB;AACA,GAAG;AACH;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,MAAM,oDAAM;AACZ;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI;AACJ;AACA,6BAA6B,mFAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,2BAA2B,mFAAU;AACrC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,mCAAmC,UAAU,iBAAiB,iBAAiB,WAAW;AAC1F;AACA;AACA;AACA;AACA;AACO;AACP,MAAM,0EAA6B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,kBAAkB,wEAAuB;AACzC;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa,mFAAU;AACvB;AACA;AACA;AACA,SAAS,uFAAc;AACvB;AACA,IAAI,wEAAsB;AAC1B;AACA,GAAG;AACH,IAAI,mDAAM,sCAAsC,4BAA4B;AAC5E;AACA,GAAG;AACH;AACA;AACO;AACP;AACA;AACA,GAAG;AACH;AACA;AACO;AACP,MAAM,0EAA6B;AACnC;AACA,IAAI;AACJ;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnLA;AACA;AACyC;AACe;AACP;AACL;AACL;AACe;AACtD;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,kCAAkC,eAAe;AACjD;AACA;AACO;AACP,kBAAkB,yDAAQ;AAC1B,IAAI,6DAAa;AACjB;AACA;AACA;AACO;AACP,mBAAmB,6DAAY;AAC/B,2CAA2C,6DAAY;AACvD;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6DAAY;AACvB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,SAAS,uDAAU;AACnB;AACA;AACO;AACP;AACA,WAAW,qDAAU;AACrB;AACA,KAAK;AACL;AACA;AACA;AACA;AACO,8BAA8B;AACrC;AACA,iCAAiC;AACjC;AACA;AACA;AACA,iBAAiB,8DAAU;AAC3B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,QAAQ,sDAAM;AACd;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;;;;;;AC1FA;AACkE;AACzB;AACyB;AAChB;AAClD;AACO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACO;AACP;AACA,SAAS,iFAAQ;AACjB;AACA;AACA,eAAe,+DAAS;AACxB;AACA;AACA,QAAQ,gEAAY;AACpB;AACA;AACA,MAAM,sDAAM;AACZ;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ,uDAAM;AACd;AACA,MAAM,gEAAY;AAClB;AACA,KAAK;AACL;AACA;AACO;AACP;AACA;AACA,aAAa,+DAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,YAAY,sDAAM;AAClB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI,sDAAM;AACV;AACA;AACA,EAAE,sDAAM;AACR;AACA;AACA;AACO;AACP;AACA,eAAe,iEAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACpFA;AAC+E;AACtC;AACiC;AAC1E;AACO;AACP;AACA,UAAU,6DAAY;AACtB;AACA;AACA,oBAAoB,qEAAoB;AACxC;AACA,8BAA8B,6DAAY;AAC1C,kBAAkB,6DAAY;AAC9B;AACA,SAAS,gFAAO;AAChB;AACA;AACA,KAAK;AACL,MAAM,sDAAM;AACZ;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACO;AACP;AACA,UAAU,6DAAY;AACtB;AACA;AACA,oBAAoB,qEAAoB;AACxC;AACA,SAAS,qFAAY,gBAAgB,6DAAY;AACjD;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACO;AACP,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4DAAa;AACtB;AACA;AACO;AACP,EAAE,wDAAS;AACX;AACA;AACO;AACP,SAAS,4DAAa;AACtB;AACA;AACO;AACP;AACA,IAAI,wDAAS;AACb;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,EAAE,yDAAU;AACZ;AACA;AACO;AACP,EAAE,wDAAS;AACX;AACA;AACO;AACP,EAAE,wDAAS;AACX;AACA;AACO;AACP,SAAS,4DAAa;AACtB;AACA;AACO;AACP,SAAS,4DAAa;AACtB;AACA;AACO;AACP,EAAE,wDAAS;AACX;AACA;AACO;AACP,SAAS,4DAAa;AACtB;AACA;AACO;AACP,EAAE,wDAAS;AACX;AACO;AACP,SAAS,4DAAa;AACtB;;;;;;;;;;;;;;;;;;;AC1EA;AAMkD;AAClD;AACA,kBAAkB,0FAAe;AACjC,kBAAkB,4FAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mFAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8FAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;;;;ACjFA;AACwF;AACrB;AACf;AACpD;AACA,WAAW,8DAAc;AACzB;AACA;AACA,iBAAiB,iEAAa;AAC9B;AACA;AACA,EAAE,kEAAa;AACf;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iEAAa;AACjB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP,MAAM,wFAAa;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,SAAS,wFAAa;AACtB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC9EA;AACkE;AACQ;AAC1E;AACA;AACA;AACO;AACP,EAAE,0FAAU,MAAM,2DAAM;AACxB;AACA;AACO;AACP,MAAM,wEAAmB;AACzB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACzBA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACO;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACA;AACP,YAAY,EAAE;AACP,iCAAiC,KAAK;AACtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDP;AAIkD;AAGD;AAGD;AAChD;AASqB;AACoB;AACS;AAClD;AACO;AACP,2CAA2C,mDAAU;AACrD,WAAW,mDAAU;AACrB;AACA,EAAE,sDAAM;AACR;AACA;AACA;AACO;AACP,2CAA2C,oDAAW;AACtD,WAAW,oDAAW;AACtB;AACA,EAAE,sDAAM;AACR;AACA;AACA;AACO;AACP;AACA;AACA,MAAM,qEAA4B;AAClC;AACA;AACA;AACA;AACA,EAAE,sDAAM;AACR;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,sDAAM;AACR;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACO;AACP,2CAA2C,iDAAQ;AACnD,eAAe,iDAAQ;AACvB;AACA;AACA;AACA;AACA;AACA,wBAAwB,kFAAO;AAC/B;AACA;AACA,MAAM,sDAAM;AACZ,MAAM;AACN,MAAM,sDAAM;AACZ;AACA,IAAI;AACJ,IAAI,sDAAM;AACV;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACO;AACP;AACA;AACA,uBAAuB,yDAAgB;AACvC,oBAAoB,6FAAkB;AACtC;AACA;AACA;AACA,EAAE,sDAAM;AACR;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,WAAW,iFAAO;AAClB;AACA,EAAE,sDAAM;AACR;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,IAAI,sDAAM;AACV;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,IAAI,sDAAM;AACV;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,IAAI,sDAAM;AACV;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,MAAM,uFAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,+CAA+C,kDAAS;AACxD;AACA;AACA;AACA,EAAE,sDAAM;AACR;AACA;AACA;AACO;AACP,MAAM,uFAAc;AACpB;AACA;AACA,EAAE,sDAAM;AACR;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,sDAAM;AACR;AACA;AACA;AACO;AACP,QAAQ,+DAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,MAAM,sDAAM;AACZ;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sDAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,sDAAM;AACZ;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sDAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,sDAAM;AACR;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,iCAAiC,+CAAM;AACvC;AACA;AACA,EAAE,sDAAM;AACR;AACA;AACO;AACP;AACA,UAAU,+CAAM;AAChB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://nexus/./node_modules/@i-is-as-i-does/nexus-core/src/base/NxDefaults.js","webpack://nexus/./node_modules/@i-is-as-i-does/nexus-core/src/base/NxHost.js","webpack://nexus/./node_modules/@i-is-as-i-does/nexus-core/src/base/NxRequest.js","webpack://nexus/./node_modules/@i-is-as-i-does/nexus-core/src/data/NxMedia.js","webpack://nexus/./node_modules/@i-is-as-i-does/nexus-core/src/load/NxInit.js","webpack://nexus/./node_modules/@i-is-as-i-does/nexus-core/src/load/NxSrc.js","webpack://nexus/./node_modules/@i-is-as-i-does/nexus-core/src/load/NxStyle.js","webpack://nexus/./node_modules/@i-is-as-i-does/nexus-core/src/logs/NxLog.js","webpack://nexus/./node_modules/@i-is-as-i-does/nexus-core/src/storg/NxMemory.js","webpack://nexus/./node_modules/@i-is-as-i-does/nexus-core/src/storg/NxStorage.js","webpack://nexus/./node_modules/@i-is-as-i-does/nexus-core/src/transl/NxCoreTranslate.js","webpack://nexus/./node_modules/@i-is-as-i-does/nexus-core/src/transl/NxElmTranslate.js","webpack://nexus/./node_modules/@i-is-as-i-does/nexus-core/src/transl/NxTranslations.js","webpack://nexus/./node_modules/@i-is-as-i-does/nexus-core/src/validt/NxSpecs.js","webpack://nexus/./node_modules/@i-is-as-i-does/nexus-core/src/validt/NxStamper.js"],"sourcesContent":["/*! Nexus | (c) 2021-22 I-is-as-I-does | AGPLv3 license */\r\nexport const defaultIO = 'https://cdn.jsdelivr.net/gh/I-is-as-I-does/Nexus@latest/dist/js/NxIO.js'\r\nexport const defaultStyle = 'https://cdn.jsdelivr.net/gh/I-is-as-I-does/Nexus@latest/dist/css/NexusI.min.css'\r\nexport const defaultSignatureRule = '.nx-instance'\r\nexport const defaultElmId = '#Nexus'\r\nexport const defaultLang = 'en'\r\n","/*! Nexus | (c) 2021-22 I-is-as-I-does | AGPLv3 license */\r\n\r\nimport { toLastSlash } from '@i-is-as-i-does/jack-js/src/modules/Web'\r\nimport { splitUrlAndId } from '../validt/NxStamper.js'\r\n\r\nexport const currentUrl = window.location.href\r\nexport const baseCurrentUrl = toLastSlash(currentUrl)\r\nexport const splitCurrentUrl = splitUrlAndId(currentUrl)\r\nexport const queries = new URLSearchParams(window.location.search.slice(1))\r\n\r\nexport function getQuery (key) {\r\n  return queries.has(key)\r\n}\r\nexport function getAbsoluteUrl (url) {\r\n  if (url.length && url.substring(0, 4) !== 'http') {\r\n    return baseCurrentUrl + url.replace(/^\\.?\\/?/, '')\r\n  }\r\n  return url\r\n}\r\n","/*! Nexus | (c) 2021-22 I-is-as-I-does | AGPLv3 license */\r\nimport { isValidHttpUrl } from '@i-is-as-i-does/jack-js/src/modules/Web'\r\nimport { splitUrlAndId, isValidId } from '../validt/NxStamper.js'\r\nimport { defaultLang, defaultStyle } from './NxDefaults.js'\r\nimport { getAbsoluteUrl, splitCurrentUrl } from './NxHost.js'\r\n\r\nexport function getRequest (NxElm, appDefaultCss = null, appDefaultLang = null) {\r\n  if(!appDefaultCss){\r\n    appDefaultCss = defaultStyle\r\n  }\r\n  if(!appDefaultLang){\r\n    appDefaultLang = defaultLang\r\n  }\r\n  var request = {\r\n    url: null,\r\n    id: '',\r\n    style: appDefaultCss,\r\n    lang: appDefaultLang\r\n  }\r\n\r\n  if (NxElm && NxElm.dataset) {\r\n    if (NxElm.dataset.src) {\r\n      var split = splitUrlAndId(getAbsoluteUrl(NxElm.dataset.src))\r\n\r\n      if (split.url) {\r\n        request.url = split.url\r\n        request.id = split.id\r\n      }\r\n    }\r\n    if (NxElm.dataset.id && isValidId(NxElm.dataset.id)) {\r\n      request.id = NxElm.dataset.id // @doc: id specified in data-id trumps id contained in src url\r\n    }\r\n    if (NxElm.dataset.style) {\r\n      var cssUrl = getAbsoluteUrl(NxElm.dataset.style)\r\n      if (isValidHttpUrl(cssUrl)) {\r\n        request.style = cssUrl\r\n      }\r\n    }\r\n    if (NxElm.dataset.lang) {\r\n      request.lang = NxElm.dataset.lang\r\n    }\r\n  }\r\n  if (splitCurrentUrl.id) {\r\n    request.id = splitCurrentUrl.id // @doc: id specified in url trumps all\r\n  }\r\n  return request\r\n}\r\n","/*! Nexus | (c) 2021-22 I-is-as-I-does | AGPLv3 license */\r\nimport { conciseUrl, oembedLink, oembedResponse } from '@i-is-as-i-does/jack-js/src/modules/Web'\r\nimport { waitForElmInDOM } from '@i-is-as-i-does/jack-js/src/modules/Help'\r\nimport { logErr } from '../logs/NxLog'\r\n\r\nimport { registerOembedResponse, getStoredOembedResponse } from '../storg/NxMemory'\r\nimport { supportedOembedMedia } from '../validt/NxSpecs'\r\n\r\nconst mediaReadyEvent = new Event('mediaReady')\r\n\r\nexport function dispatchMediaReady (resolvedElm, parentElm) {\r\n  waitForElmInDOM(resolvedElm.tagName, parentElm).then(() => {\r\n    parentElm.dispatchEvent(mediaReadyEvent)\r\n  })\r\n}\r\n\r\nexport function placeMedia (url, parentElm, mediaElm) {\r\n  if (mediaElm.tagName !== 'A') {\r\n    var loadEvent = 'load'\r\n    var srcElm = mediaElm\r\n    if (['VIDEO', 'AUDIO'].includes(mediaElm.tagName)) {\r\n      loadEvent = 'loadedmetadata'\r\n      if (mediaElm.tagName === 'VIDEO ') {\r\n        srcElm = mediaElm.firstChild\r\n      }\r\n    }\r\n    mediaElm.addEventListener(loadEvent, function () {\r\n      dispatchMediaReady(mediaElm, parentElm)\r\n    })\r\n    srcElm.addEventListener('error', function () {\r\n      logErr('Unable to load requested media', url)\r\n      var fallback = pageElm(url)\r\n      mediaElm.replaceWith(fallback)\r\n      dispatchMediaReady(fallback, parentElm)\r\n    })\r\n    srcElm.src = url\r\n  } else {\r\n    if(!mediaElm.textContent){\r\n      mediaElm.textContent = conciseUrl(url, true)\r\n    }\r\n    dispatchMediaReady(mediaElm, parentElm)\r\n    mediaElm.href = url\r\n  }\r\n  parentElm.append(mediaElm)\r\n}\r\n\r\nexport function setMediaUrl (srcElm, attrb = 'src', url = null) {\r\n  if (url) {\r\n    srcElm.setAttribute(attrb, url)\r\n  }\r\n}\r\n\r\nexport function pageElm (url = null) {\r\n  var mediaElm = document.createElement('A')\r\n  mediaElm.target = '_blank'\r\n  if(url){\r\n    mediaElm.textContent = conciseUrl(url, true)\r\n    mediaElm.setAttribute('href', url)\r\n  }\r\n  return mediaElm\r\n}\r\n\r\nexport function videoElm (url = null) {\r\n  var mediaElm = document.createElement('VIDEO')\r\n  mediaElm.setAttribute('controls', true)\r\n  var srcElm = document.createElement('SOURCE')\r\n  mediaElm.append(srcElm)\r\n  setMediaUrl(srcElm, 'src', url)\r\n  return mediaElm\r\n}\r\n\r\nexport function audioElm (url = null) {\r\n  var mediaElm = document.createElement('AUDIO')\r\n  mediaElm.setAttribute('controls', true)\r\n  setMediaUrl(mediaElm, 'src', url)\r\n  return mediaElm\r\n}\r\n\r\nexport function imgElm (url = null) {\r\n  var mediaElm = document.createElement('IMG')\r\n  setMediaUrl(mediaElm, 'src', url)\r\n  return mediaElm\r\n}\r\n\r\nexport function iframeElm (url = null) {\r\n  var mediaElm = document.createElement('IFRAME')\r\n  mediaElm.scrolling = 'no'\r\n  mediaElm.allow = 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\r\n  mediaElm.allowfullscreen = true\r\n  setMediaUrl(mediaElm, 'src', url)\r\n  return mediaElm\r\n}\r\n\r\nexport function mediaElm (type, url = null) {\r\n  if (supportedOembedMedia.includes(type)) {\r\n    type = 'iframe'\r\n  }\r\n  var f\r\n  switch (type) {\r\n    case 'image':\r\n      f = imgElm\r\n      break\r\n    case 'video':\r\n      f = videoElm\r\n      break\r\n    case 'audio':\r\n      f = audioElm\r\n      break\r\n    case 'iframe':\r\n      f = iframeElm\r\n      break\r\n    default:\r\n      f = pageElm\r\n  }\r\n  return f(url)\r\n}\r\n\r\nexport function resolveEmbedMediaData (url, type) {\r\n  var iframeUrl = getStoredOembedResponse(url)\r\n  var success = function () {\r\n    return { type: type, url: iframeUrl }\r\n  }\r\n  var fallback = function () {\r\n    return { type: 'page', url: url }\r\n  }\r\n  if (iframeUrl) {\r\n    return Promise.resolve(success())\r\n  }\r\n  var link = oembedLink(url, type, 720)\r\n  if (!link) {\r\n    return Promise.resolve(fallback())\r\n  }\r\n  return oembedResponse(link).then(response => {\r\n    iframeUrl = response.html.split('src=\"')[1].split('\"')[0]\r\n    registerOembedResponse(url, iframeUrl)\r\n    return success()\r\n  }).catch((err) => {\r\n    logErr('Failed to resolved oembed media', { url: url, err: err.message })\r\n    return fallback()\r\n  })\r\n}\r\n\r\nexport function resolveEmbedMedia (url, type, parentElm) {\r\n  resolveEmbedMediaData(url, type).then(result => {\r\n    placeMedia(result.url, parentElm, mediaElm(result.type))\r\n  })\r\n}\r\n\r\nexport function resolveMedia (url, type, parentElm) {\r\n  if (supportedOembedMedia.includes(type)) {\r\n    resolveEmbedMedia(url, type, parentElm)\r\n  } else {\r\n    placeMedia(url, parentElm, mediaElm(type))\r\n  }\r\n}\r\n\r\nexport function preResolveViewMedia (view) {\r\n  if(view.data.content.media.type === 'page'){\r\n    view.resolved.media = true\r\n    return Promise.resolve(view)\r\n  }\r\n  var host = document.createElement('DIV')\r\n  host.style.display = 'none'\r\n  document.body.append(host)\r\n  var handleResult = function () {\r\n    if (host.firstChild.tagName === 'A' && view.data.content.media.type !== 'page') {\r\n      view.data.content.media.type = 'page'\r\n    } else if (host.firstChild.tagName === 'IFRAME') {\r\n      view.data.content.media.url = host.firstChild.src\r\n    }\r\n    host.remove()\r\n    view.resolved.media = true\r\n    return view\r\n  }\r\n  var promise = new Promise(function (resolve) {\r\n    host.addEventListener('mediaReady', resolve)\r\n  }).then(handleResult)\r\n  resolveMedia(view.data.content.media.url, view.data.content.media.type, host)\r\n  return promise\r\n}\r\n","/*! Nexus | (c) 2021-22 I-is-as-I-does | AGPLv3 license */\r\n\r\nimport { loadAppCss } from './NxStyle.js'\r\nimport { logErr, setConsoleLog } from '../logs/NxLog.js'\r\nimport { getRequest } from '../base/NxRequest.js'\r\nimport { getQuery } from '../base/NxHost.js'\r\nimport { getSrcData } from './NxSrc.js'\r\nimport { defaultElmId } from './../base/NxDefaults.js'\r\n\r\nexport const defaultInitOptions = {\r\n  customSelector: null,\r\n  forceLog: false,\r\n  forceStyle: null,\r\n  customSignatureRule: null,\r\n  appDefaultCss: null, \r\n  appDefaultLang: null\r\n}\r\n\r\nexport function setCookie () {\r\n  document.cookie = 'Nx=Instance; SameSite=None; Secure'\r\n}\r\n\r\nexport function initLogger (forceLog = false) {\r\n  if (forceLog || getQuery('log')) {\r\n    setConsoleLog(true)\r\n  }\r\n}\r\n\r\nexport function retrieveNxElm (customSelector = null) {\r\n  var selectors = [defaultElmId]\r\n  if (customSelector && customSelector !== defaultElmId) {\r\n    selectors.unshift(customSelector)\r\n  }\r\n  var elm\r\n  for (var s = 0; s < 2; s++) {\r\n    elm = document.querySelector(selectors[s])\r\n    if (elm) {\r\n      return elm\r\n    }\r\n  }\r\n  elm = document.createElement('DIV')\r\n  elm.id = defaultElmId\r\n\r\n  return elm\r\n}\r\n\r\nexport function resolveTheme (request, fallbackCssUrl = null, forceStyle = null, customSignatureRule = null) {\r\n  var url = request.style\r\n  if (forceStyle) {\r\n    url = forceStyle\r\n    if(!fallbackCssUrl || fallbackCssUrl === forceStyle){\r\n      fallbackCssUrl = request.style\r\n    } \r\n  } else if(fallbackCssUrl === url){\r\n    fallbackCssUrl = null\r\n  }\r\n  return loadAppCss(url, customSignatureRule, fallbackCssUrl)\r\n}\r\n\r\nexport function resolveData (request) {\r\n  if (request.url) {\r\n    return getSrcData(request.url).then(nxdata => {\r\n      return nxdata\r\n    })\r\n  }\r\n  return Promise.reject(new Error(0))\r\n}\r\n\r\nexport function initAll (options = {}) {\r\n  var seed = {}\r\n  seed.options = Object.assign({}, defaultInitOptions, options)\r\n  setCookie()\r\n  initLogger(seed.options.forceLog)\r\n  seed.nxelm = retrieveNxElm(seed.options.customSelector)\r\n  seed.request = getRequest(seed.nxelm, seed.options.appDefaultCss, seed.options.appDefaultLang)\r\n    return resolveTheme(seed.request, seed.options.appDefaultCss, seed.options.forceStyle, seed.options.customSignatureRule)\r\n    .then((styleUrl) => {\r\n      seed.styleUrl = styleUrl\r\n      return resolveData(seed.request)\r\n    }).then(nxdata => {\r\n      seed.nxdata = nxdata\r\n      return seed\r\n    }).catch(err => {\r\n      var msg = err.message\r\n      if (!Number.isInteger(msg)) {\r\n        logErr('Nexus Init Failed', msg)\r\n        msg = 400\r\n      }\r\n      throw new Error(msg)\r\n    })\r\n}\r\n","/*! Nexus | (c) 2021-22 I-is-as-I-does | AGPLv3 license */\r\nimport { loadJson } from '@i-is-as-i-does/jack-js/src/modules/Web'\r\nimport { logErr } from '../logs/NxLog.js'\r\nimport { getStoredData, registerData } from '../storg/NxMemory.js'\r\nimport { validData } from '../validt/NxStamper.js'\r\n\r\nexport function getThreadsList (nxdata) {\r\n  var list = []\r\n  nxdata.threads.forEach((thread) => {\r\n    list.push(thread.id)\r\n  })\r\n  return list\r\n}\r\n\r\nexport function loadSrc (url) {\r\n  // @doc: src should not contain #id\r\n  return loadJson(url)\r\n\r\n    .then((nxdata) => {\r\n      nxdata = validData(nxdata)\r\n\r\n      if (nxdata) {\r\n        registerData(url, nxdata)\r\n        return nxdata\r\n      }\r\n      logErr('Invalid source', url)\r\n      return Promise.reject(new Error(400))\r\n    })\r\n    .catch((err) => {\r\n      var code = 400\r\n      if (err.message !== 400) {\r\n        code = 404\r\n        logErr('No response', err.message)\r\n      }\r\n      registerData(url, code)\r\n      return Promise.reject(new Error(code))\r\n    })\r\n}\r\n\r\nexport function prcFileSrc (readerEvent) {\r\n  var nxdata = JSON.parse(readerEvent.target.result)\r\n  if (nxdata) {\r\n    nxdata = validData(nxdata)\r\n    if (nxdata) {\r\n      return nxdata\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function loadSrcFile (inputEvt) {\r\n  if (inputEvt.target.files.length) {\r\n    if (inputEvt.target.files[0].type === 'application/json') {\r\n      return new Promise((resolve, reject) => {\r\n        var reader = new FileReader()\r\n        reader.onload = function (event) {\r\n          var nxdata = prcFileSrc(event)\r\n          if (nxdata) {\r\n            resolve(nxdata)\r\n          } else {\r\n            logErr('Invalid source', inputEvt.target.files[0])\r\n            reject(new Error(400))\r\n          }\r\n        }\r\n        return reader.readAsText(inputEvt.target.files[0])\r\n      })\r\n    }\r\n    logErr('Invalid file type', inputEvt.target.files[0])\r\n    return Promise.reject(new Error(400))\r\n  }\r\n  logErr('No file selected')\r\n  return Promise.reject(new Error(400))\r\n}\r\n\r\nexport function getSrcData (url) {\r\n  // @doc: url should not contain #id\r\n  var nxdata = getStoredData(url)\r\n  if (nxdata !== null) {\r\n    if (Number.isInteger(nxdata)) {\r\n      return Promise.reject(new Error(nxdata))\r\n    }\r\n    return Promise.resolve(nxdata)\r\n  }\r\n  return loadSrc(url)\r\n}\r\n","/*! Nexus | (c) 2021-22 I-is-as-I-does | AGPLv3 license */\r\nimport { loadCss, pageHasSheet } from '@i-is-as-i-does/jack-js/src/modules/Web'\r\nimport { logErr } from '../logs/NxLog.js'\r\nimport { defaultSignatureRule, defaultStyle } from '../base/NxDefaults.js'\r\n\r\nexport function loadAppCss (url = null, signatureRule = null, fallbackUrl = null) {\r\n  if (!url) {\r\n    url = defaultStyle\r\n  }\r\n  if (!signatureRule) {\r\n    signatureRule = defaultSignatureRule\r\n  }\r\n  if (!fallbackUrl && url !== defaultStyle) {\r\n    fallbackUrl = defaultStyle\r\n  }\r\n  return loadCss(signatureRule, url)\r\n    .then(() => {\r\n      return Promise.resolve(url)\r\n    }).catch((err) => {\r\n      logErr('Theme not found', err.message)\r\n      if (fallbackUrl) {\r\n        return loadAppCss(fallbackUrl)\r\n      } else {\r\n        return Promise.reject(new Error(404))\r\n      }\r\n    })\r\n}\r\n\r\nexport function isCssLoaded (url = null, signatureRule = null) {\r\n  if (!url) {\r\n    url = defaultStyle\r\n  }\r\n  if (!signatureRule) {\r\n    signatureRule = defaultSignatureRule\r\n  }\r\n  return pageHasSheet(signatureRule, defaultStyle)\r\n}\r\n","/*! Nexus | (c) 2021-22 I-is-as-I-does | AGPLv3 license */\r\n\r\nvar errors = []\r\nvar consoleLog = false\r\n\r\nexport function setConsoleLog (bool = true) {\r\n  consoleLog = bool\r\n}\r\nexport function clearErr () {\r\n  errors = []\r\n}\r\n\r\nexport function logErr (msg, detail = null) {\r\n  var entry = { msg: msg }\r\n  if (detail) {\r\n    entry.detail = detail\r\n  }\r\n  errors.push(entry)\r\n  if (consoleLog) {\r\n    console.log('Nexus/Error: ' + JSON.stringify(entry))\r\n  }\r\n}\r\n\r\nexport function getErr () {\r\n  return errors\r\n}\r\n","/*! Nexus | (c) 2021-22 I-is-as-I-does | AGPLv3 license */\r\n\r\nimport { getStoredItem, removeItem, storeItem } from './NxStorage.js'\r\n\r\nvar visitStore = {}\r\nvar dataStore = {}\r\nvar linkedStore = {}\r\n\r\nvar oembedStore = {}\r\nconst editpsrcix = 'nx-edit#'\r\n\r\nfunction threadLastSeenDate (src) {\r\n  return getStoredItem(src, 'local', visitStore)\r\n}\r\n\r\nexport function registerEditData (url, nxdata) {\r\n  storeItem(editpsrcix + url, nxdata, 'local')\r\n}\r\n\r\nexport function getStoredEditData (url) {\r\n  return getStoredItem(editpsrcix + url, 'local')\r\n}\r\n\r\nexport function registerThreadVisit (src, timestamp) {\r\n  if (!Object.prototype.hasOwnProperty.call(visitStore, src)) {\r\n    storeItem(src, timestamp, 'local', visitStore)\r\n  }\r\n}\r\n\r\nexport function isThreadContentUnseen (src, timestamp) {\r\n  var lastKnownDate = threadLastSeenDate(src)\r\n\r\n  if (!lastKnownDate) {\r\n    return true\r\n  }\r\n  if (timestamp && lastKnownDate !== timestamp) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nexport function clearData (url) {\r\n  removeItem(url, 'session', dataStore)\r\n}\r\n\r\nexport function registerData (url, nxdata) {\r\n  storeItem(url, nxdata, 'session', dataStore)\r\n}\r\n\r\nexport function registerLinkedMaps (src, map) {\r\n  storeItem(src + ':linked', map, 'session', linkedStore)\r\n}\r\n\r\nexport function getStoredLinkedMaps (src) {\r\n  return getStoredItem(src + ':linked', 'session', linkedStore)\r\n}\r\n\r\nexport function getStoredData (url) {\r\n  return getStoredItem(url, 'session', dataStore)\r\n}\r\n\r\nexport function registerOembedResponse (givenUrl, response) {\r\n  storeItem(givenUrl, response, 'local', oembedStore)\r\n}\r\n\r\nexport function getStoredOembedResponse (givenUrl) {\r\n  return getStoredItem(givenUrl, 'local', oembedStore)\r\n}\r\n\r\nexport function setStoredLang (lang) {\r\n  storeItem('nx-lang', lang, 'local')\r\n}\r\nexport function getStoredLang () {\r\n  return getStoredItem('nx-lang', 'local')\r\n}\r\n","/*! Nexus | (c) 2021-22 I-is-as-I-does | AGPLv3 license */\r\nimport {\r\n  clearPartialStorage,\r\n  getLocalStorage,\r\n  getSessionStorage,\r\n  jsonSize\r\n} from '@i-is-as-i-does/jack-js/src/modules/Stock'\r\n\r\nconst locStorag = getLocalStorage()\r\nconst sesStorag = getSessionStorage()\r\n\r\nfunction setStorageAvailability (store) {\r\n  if (store && !store.getItem('available')) {\r\n    store.setItem('available', 5000)\r\n  }\r\n}\r\n\r\nfunction resolveStore (storage) {\r\n  if (storage === 'session') {\r\n    return sesStorag\r\n  }\r\n  return locStorag\r\n}\r\n\r\nsetStorageAvailability(locStorag)\r\nsetStorageAvailability(sesStorag)\r\n\r\nexport function storeItem (key, data, storage = 'session', instanceStore = null) {\r\n  var sdata = JSON.stringify(data)\r\n  if (instanceStore) {\r\n    instanceStore[key] = sdata\r\n  }\r\n  var store = resolveStore(storage)\r\n  if (store != null) {\r\n    var datasize = jsonSize(sdata, true, true)\r\n    if (datasize > 2000) {\r\n      return\r\n    }\r\n\r\n    var avail = store.getItem('available')\r\n    if (avail < 1000) {\r\n      avail = 5000 - clearPartialStorage(store, 2000)\r\n    }\r\n    avail -= datasize\r\n    store.setItem(key, sdata)\r\n    store.setItem('available', Math.ceil(avail))\r\n  }\r\n}\r\n\r\nexport function getStoredItem (key, storage = 'session', instanceStore = null) {\r\n  if (instanceStore !== null && Object.prototype.hasOwnProperty.call(instanceStore, key)) {\r\n    return JSON.parse(instanceStore[key])\r\n  }\r\n  var store = resolveStore(storage)\r\n  if (store) {\r\n    var sdata = store.getItem(key)\r\n    if (sdata) {\r\n      if (instanceStore) {\r\n        instanceStore[key] = sdata\r\n      }\r\n      return JSON.parse(sdata)\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nexport function removeItem (key, storage = 'session', instanceStore = null) {\r\n  if (instanceStore & Object.prototype.hasOwnProperty.call(instanceStore, key)) {\r\n    delete instanceStore[key]\r\n  }\r\n  var store = resolveStore(storage)\r\n  if (store) {\r\n    store.removeItem(key)\r\n  }\r\n}\r\nexport function clearCache () {\r\n  [sesStorag, locStorag].forEach(store => {\r\n    if (store) {\r\n      store.clear()\r\n    }\r\n  })\r\n}\r\n","/*! Nexus | (c) 2021-22 I-is-as-I-does | AGPLv3 license */\r\nimport { isNonEmptyObj, isNonEmptyStr } from '@i-is-as-i-does/jack-js/src/modules/Check'\r\nimport { getStoredLang, setStoredLang } from '../storg/NxMemory.js'\r\nimport { NxTranslations } from './NxTranslations.js'\r\n\r\nvar txts = NxTranslations\r\nvar availableLangs = Object.keys(txts)\r\n\r\nvar storedLang = getStoredLang()\r\nif (storedLang != null && !langIsAvailable(storedLang)) {\r\n  storedLang = null\r\n  setStoredLang(null)\r\n}\r\n\r\nvar currentLang = null\r\nif (storedLang) {\r\n  currentLang = storedLang\r\n} else {\r\n  currentLang = document.querySelector('html').lang\r\n  if (!langIsAvailable(currentLang)) {\r\n    currentLang = 'en'\r\n  }\r\n}\r\n\r\nfunction updateStorage (lang) {\r\n  if (storedLang !== lang) {\r\n    setStoredLang(lang)\r\n    storedLang = lang\r\n  }\r\n}\r\n\r\nexport function setOriginLang (lang) {\r\n  // @doc lang should be seed.request.lang from NxInit, or custom one\r\n  if (!storedLang) {\r\n    setUserSelectedLang(lang)\r\n  }\r\n}\r\n\r\nexport function setAdtTranslations (translObj) {\r\n  if (isNonEmptyObj(translObj)) {\r\n    Object.assign(txts, translObj) // @todo: test if works as expected from nested props\r\n    availableLangs.push(\r\n      ...Object.keys(txts).filter(\r\n        (item) => availableLangs.indexOf(item) < 0\r\n      )\r\n    )\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nexport function langIsAvailable (lang) {\r\n  return isNonEmptyStr(lang) && availableLangs.includes(lang)\r\n}\r\n\r\nexport function setUserSelectedLang (lang) {\r\n  if (langIsAvailable(lang) && lang !== currentLang) {\r\n    currentLang = lang\r\n    updateStorage(lang)\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nexport function getAvailableLangs () {\r\n  return availableLangs\r\n}\r\n\r\nexport function getLang () {\r\n  return currentLang\r\n}\r\n\r\nexport function getTxt (key) {\r\n  var text = key\r\n  if (currentLang !== 'en' && txts[currentLang][key]) {\r\n    text = txts[currentLang][key]\r\n  }\r\n  return text\r\n}","/*! Nexus | (c) 2021-22 I-is-as-I-does | AGPLv3 license */\r\nimport { getTxt, setUserSelectedLang } from './NxCoreTranslate.js'\r\nimport { vSplitFlap } from '@i-is-as-i-does/valva/src/modules/transitions'\r\n\r\nvar translStore = {}\r\n\r\nexport function updateTextElm (elm, textkey) {\r\n  vSplitFlap(elm, getTxt(textkey), 50)\r\n}\r\n\r\nexport function triggerTranslate (lang) {\r\n  if (setUserSelectedLang(lang)) {\r\n    for (const [textkey, elms] of Object.entries(translStore)) {\r\n      elms.forEach((elm) => {\r\n        updateTextElm(elm, textkey)\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport function registerTranslElm (elm, textkey) {\r\n  if (!translStore[textkey]) {\r\n    translStore[textkey] = []\r\n  }\r\n  translStore[textkey].push(elm)\r\n}\r\n","/*! Nexus | (c) 2021-22 I-is-as-I-does | AGPLv3 license */\r\n\r\nexport const NxTranslations = {\r\n  fr: {\r\n    author: 'auteur·e',\r\n    handle: 'pseudonyme',\r\n    about: 'à propos',\r\n    url: 'url',\r\n    id: 'id',\r\n    title: 'titre',\r\n    description: 'description',\r\n    timestamp: 'date',\r\n    main: 'corps',\r\n    aside: 'aparté',\r\n    media: 'média',\r\n    type: 'type',\r\n    caption: 'légende',\r\n    index: 'index',\r\n    distant: 'distant',\r\n    local: 'local',\r\n    threads: 'fils',\r\n    linked: 'liés',\r\n    content: 'contenu',\r\n    history: 'historique',\r\n    copied: 'copié',\r\n    embed: 'intégré',\r\n    source: 'source',\r\n    saved: 'sauvegardé',\r\n    'local thread': 'fil local',\r\n    'linked threads': 'fils liés',\r\n    'No valid thread': 'Aucun fil valide',\r\n    'Duplicate thread id': 'Identifiant du fil en double',\r\n    'Duplicate linked thread': 'Fil lié en double',\r\n    'Invalid linked thread': 'Fil lié non valide',\r\n    'Invalid url': 'Url non valide',\r\n    'Invalid thread id': 'Identifiant de fil non valide',\r\n    'Invalid length': 'Longueur non valide',\r\n    'Invalid min length': 'Longueur minimale non valide',\r\n    'Invalid max length': 'Longueur maximale non valide',\r\n    'Unable to cut string': 'Impossible de raccourcir le texte',\r\n    'Invalid timestamp': 'Horodatage non valide',\r\n    'Unknown field': 'Champ inconnu',\r\n    'Invalid field type': 'Type de champ non valide',\r\n    'Field is empty': 'Le champ est vide',\r\n    'Unable to extend string': 'Impossible de prolonger le texte',\r\n    'Unknown characters limits category':\r\n    'Catégorie de limite de caractères inconnue',\r\n    'Unknown items limits category': \"Catégorie de limite d'éléments inconnue\",\r\n    'Invalid media type': 'Type de media non valide',\r\n    'Invalid app url': \"Url de l'application non valide\",\r\n    'Too many linked threads': 'Trop de fils liés',\r\n    'Too many threads': 'Trop de fils',\r\n    'Init failed': \"L'initialisation a échoué\",\r\n    'Theme not found': 'Thème non trouvé',\r\n    'No response': 'Aucune réponse',\r\n    'Invalid source': 'Source non valide',\r\n    'Invalid Nexus data': 'Données Nexus non valides'\r\n  }\r\n}\r\n","/* eslint-disable no-useless-escape */\r\n/*! Nexus | (c) 2021-22 I-is-as-I-does | AGPLv3 license */\r\nexport const appUrl = 'https://nexus-dock.github.io/'\r\nexport const typesMap = {\r\n  nxdata: 'Object',\r\n  nexus: 'String',\r\n  author: 'Object',\r\n  handle: 'String',\r\n  about: 'String',\r\n  url: 'String',\r\n  threads: 'Array',\r\n  'threads.item': 'Object',\r\n  id: 'String',\r\n  title: 'String',\r\n  description: 'String',\r\n  content: 'Object',\r\n  timestamp: 'String',\r\n  main: 'String',\r\n  aside: 'String',\r\n  media: 'Object',\r\n  type: 'String',\r\n  caption: 'String',\r\n  linked: 'Array',\r\n  'linked.item': 'String'\r\n}\r\nexport const required = ['nexus', 'author', 'threads', 'handle', 'url', 'id', 'title', 'content', 'timestamp', 'main', 'type']\r\nexport const charMinMax = {\r\n  handle: [3, 30],\r\n  about: [0, 400],\r\n  title: [3, 30],\r\n  description: [0, 400],\r\n  main: [1, 1000],\r\n  aside: [0, 400],\r\n  caption: [0, 200]\r\n}\r\nexport const itemsMinMax = {\r\n  threads: [1, 100],\r\n  linked: [0, 100]\r\n}\r\nexport const supportedOembedMedia = [\r\n  'youtube',\r\n  'vimeo',\r\n  'soundcloud'\r\n]\r\nexport const supportedBaseMedia = [\r\n  'page',\r\n  'video',\r\n  'image',\r\n  'audio'\r\n]\r\nexport const supportedMediaTypes = supportedBaseMedia.concat(supportedOembedMedia)\r\nexport const timestampPattern =\r\n    '^[0-9]{4}(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?((T|\\s)(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]))?)?$'\r\nexport const idPattern = '^[a-zA-Z0-9-]{3,36}$'\r\nexport const urlPattern = '^https?:\\/\\/.*'\r\n","/*! Nexus | (c) 2021-22 I-is-as-I-does | AGPLv3 license */\r\nimport {\r\n  isEmpty,\r\n  seemsLikeValidDate\r\n} from '@i-is-as-i-does/jack-js/src/modules/Check'\r\nimport {\r\n  charCut\r\n} from '@i-is-as-i-does/jack-js/src/modules/Help'\r\nimport {\r\n  isValidHttpUrl\r\n} from '@i-is-as-i-does/jack-js/src/modules/Web'\r\n\r\nimport {\r\n  charMinMax,\r\n  itemsMinMax,\r\n  appUrl,\r\n  supportedMediaTypes,\r\n  timestampPattern,\r\n  idPattern,\r\n  typesMap\r\n} from './NxSpecs.js'\r\nimport { logErr } from '../logs/NxLog.js'\r\nimport { getAbsoluteUrl } from '../base/NxHost.js'\r\n\r\nexport function charLimits (catg) {\r\n  if (Object.prototype.hasOwnProperty.call(charMinMax, catg)) {\r\n    return charMinMax[catg]\r\n  }\r\n  logErr('Unknown characters limits category', catg)\r\n  return false\r\n}\r\n\r\nexport function itmLimits (catg) {\r\n  if (Object.prototype.hasOwnProperty.call(itemsMinMax, catg)) {\r\n    return itemsMinMax[catg]\r\n  }\r\n  logErr('Unknown items limits category', catg)\r\n  return false\r\n}\r\n\r\nexport function isValidMediaType (mediaType) {\r\n  if (\r\n    hasValidType(mediaType, 'type', true) &&\r\n      supportedMediaTypes.includes(mediaType)\r\n  ) {\r\n    return true\r\n  }\r\n\r\n  logErr('Invalid media type', mediaType)\r\n  return false\r\n}\r\n\r\nexport function extendString (str, catg) {\r\n  var limits = charLimits(catg)\r\n  if (limits !== false) {\r\n    var diff = limits[0] - str.length\r\n    if (diff > 0) {\r\n      var placeholder = '-'\r\n      str = placeholder.repeat(diff) + str\r\n    }\r\n    return str\r\n  }\r\n  logErr('Unable to extend string', catg)\r\n  return null\r\n}\r\n\r\nexport function validLenghtStr (str, catg, nonEmpty = true) {\r\n  if (!hasValidType(str, catg, nonEmpty)) {\r\n    str = ''\r\n  }\r\n  if (!strHasValidMinLength(str, catg)) {\r\n    str = extendString(str, catg)\r\n  } else if (!strHasValidMaxLength(str, catg)) {\r\n    str = cutString(str, catg)\r\n  }\r\n  return str\r\n}\r\n\r\nexport function hasValidType (item, field, nonEmpty = true) {\r\n  if (Object.prototype.hasOwnProperty.call(typesMap, field)) {\r\n    var type = typesMap[field]\r\n    if (\r\n      typeof item !== 'undefined' &&\r\n        item !== null &&\r\n        item.constructor.name === type\r\n    ) {\r\n      if (!nonEmpty || !isEmpty(item)) {\r\n        return true\r\n      }\r\n      logErr('Field is empty', field)\r\n    } else {\r\n      logErr('Invalid field type', field)\r\n    }\r\n  } else {\r\n    logErr('Unknown field', field)\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nexport function validMedia (mediaObj) {\r\n  if (\r\n    hasValidType(mediaObj, 'media', true) &&\r\n      isValidUrl(mediaObj.url) &&\r\n      isValidMediaType(mediaObj.type)\r\n  ) {\r\n    var m = {}\r\n    m.url = mediaObj.url\r\n    m.type = mediaObj.type\r\n    m.caption = ''\r\n    if (mediaObj.caption) {\r\n      m.caption = validLenghtStr(mediaObj.caption, 'caption', false)\r\n    }\r\n    return m\r\n  }\r\n  return { url: '', type: '', caption: '' }\r\n}\r\n\r\nexport function isValidTimestamp (timestamp, strict = false) {\r\n  if (\r\n    hasValidType(timestamp, 'timestamp', true) &&\r\n      (timestamp.match(timestampPattern) ||\r\n        (!strict && seemsLikeValidDate(timestamp)))\r\n  ) {\r\n    return true\r\n  }\r\n  logErr('Invalid timestamp', timestamp)\r\n  return false\r\n}\r\n\r\nexport function validContent (content) {\r\n  if (\r\n    hasValidType(content, 'content', true) &&\r\n      isValidTimestamp(content.timestamp) &&\r\n      hasValidType(content.main, 'main', true)\r\n  ) {\r\n    var main = validLenghtStr(content.main, 'main')\r\n\r\n    if (main) {\r\n      var c = {}\r\n      c.timestamp = content.timestamp\r\n      c.main = main\r\n      c.aside = ''\r\n      if (content.aside) {\r\n        c.aside = validLenghtStr(content.aside, 'aside', false)\r\n      }\r\n      c.media = validMedia(content.media)\r\n      return c\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport function cutString (item, catg) {\r\n  var limits = charLimits(catg)\r\n  if (limits !== false) {\r\n    return charCut(item, limits[1])\r\n  }\r\n  logErr('Unable to cut string', catg)\r\n  return ''\r\n}\r\n\r\nexport function strHasValidMaxLength (item, catg) {\r\n  var limits = charLimits(catg)\r\n  if (limits !== false) {\r\n    if (item.length <= limits[1]) {\r\n      return true\r\n    }\r\n    logErr('Invalid max length', catg)\r\n  }\r\n  return false\r\n}\r\nexport function strHasValidMinLength (item, catg) {\r\n  var limits = charLimits(catg)\r\n  if (limits !== false) {\r\n    if (item.length >= limits[0]) {\r\n      return true\r\n    }\r\n    logErr('Invalid min length', catg)\r\n  }\r\n  return false\r\n}\r\n\r\nexport function hasValidLength (item, catg) {\r\n  var limits = charLimits(catg)\r\n  if (limits !== false) {\r\n    if (item.length >= limits[0] && item.length <= limits[1]) {\r\n      return true\r\n    }\r\n    logErr('Invalid length', catg)\r\n  }\r\n  return false\r\n}\r\n\r\nexport function splitUrlAndId (url) {\r\n  var rt = {\r\n    url: null,\r\n    id: ''\r\n  }\r\n  if (isValidHttpUrl(url)) {\r\n    rt.url = url\r\n\r\n    if (url.includes('#')) {\r\n      var sp = url.split('#')\r\n      var id = sp.pop()\r\n      rt.url = sp.join('#')\r\n      if (id && isValidId(id)) {\r\n        rt.id = id\r\n      }\r\n    }\r\n  }\r\n\r\n  return rt\r\n}\r\n\r\nexport function isValidId (id) {\r\n  if (hasValidType(id, 'id', true) && id.match(idPattern)) {\r\n    return true\r\n  }\r\n\r\n  logErr('Invalid thread id', id)\r\n  return false\r\n}\r\n\r\nexport function isValidUrl (url) {\r\n  if (isValidHttpUrl(url)) {\r\n    return true\r\n  }\r\n  logErr('Invalid url', url)\r\n  return false\r\n}\r\n\r\nexport function isValidLinkItm (link) {\r\n  if (\r\n    hasValidType(link, 'linked.item', true) &&\r\n      isValidUrl(link)\r\n  ) {\r\n    return true\r\n  }\r\n  logErr('Invalid linked thread')\r\n  return false\r\n}\r\n\r\nexport function getValidSrcUrl (url, id) {\r\n  url = getAbsoluteUrl(url)\r\n  if (isValidLinkItm(url)) {\r\n    if (id && isValidId(id)) {\r\n      url += '#' + id\r\n    }\r\n    return url\r\n  }\r\n  return ''\r\n}\r\n\r\nexport function validLinks (linked) {\r\n  var vlinked = []\r\n  if (hasValidType(linked, 'linked', false)) {\r\n    var len = linked.length\r\n    var limit = itmLimits('linked')[1]\r\n    if (len > limit) {\r\n      logErr('Too many linked threads', len + ' /' + limit)\r\n      len = limit\r\n    }\r\n    for (var i = 0; i < len; i++) {\r\n      if (isValidLinkItm(linked[i])) {\r\n        var split = splitUrlAndId(linked[i])\r\n        var url = split.url\r\n        if (split.id) {\r\n          url += '#' + split.id\r\n        }\r\n\r\n        if (!vlinked.includes(url)) {\r\n          vlinked.push(url)\r\n          continue\r\n        }\r\n        logErr('Duplicate linked thread', linked[i])\r\n      }\r\n    }\r\n  }\r\n  return vlinked\r\n}\r\n\r\nexport function validThread (thread) {\r\n  if (\r\n    hasValidType(thread, 'threads.item', true) &&\r\n      isValidId(thread.id)\r\n  ) {\r\n    var content = validContent(thread.content)\r\n    if (content != null) {\r\n      var t = {}\r\n      t.id = thread.id\r\n      t.title = validLenghtStr(thread.title, 'title')\r\n      t.description = ''\r\n      if (thread.description) {\r\n        t.description = validLenghtStr(\r\n          thread.description,\r\n          'description', false\r\n        )\r\n      }\r\n\r\n      t.content = content\r\n      t.linked = validLinks(thread.linked)\r\n      return t\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nexport function validThreads (threads) {\r\n  var vthreads = []\r\n\r\n  if (hasValidType(threads, 'threads', true)) {\r\n    var len = threads.length\r\n    var limit = itmLimits('threads')[1]\r\n    if (len > limit) {\r\n      logErr('Too many threads', len + ' /' + limit)\r\n      len = limit\r\n    }\r\n    var ids = []\r\n    for (var i = 0; i < len; i++) {\r\n      var thread = validThread(threads[i])\r\n\r\n      if (thread !== null) {\r\n        if (!ids.includes(thread.id)) {\r\n          ids.push(thread.id)\r\n          vthreads.push(thread)\r\n          continue\r\n        }\r\n        logErr('Duplicate thread id', thread.id)\r\n      }\r\n    }\r\n\r\n    if (vthreads.length) {\r\n      return vthreads\r\n    }\r\n  }\r\n  logErr('No valid thread')\r\n  return []\r\n}\r\n\r\nexport function validAuthor (author) {\r\n  if (\r\n    hasValidType(author, 'author', true) &&\r\n      isValidUrl(author.url)\r\n  ) {\r\n    var handle = validLenghtStr(author.handle, 'handle')\r\n    if (handle) {\r\n      var a = {}\r\n      a.handle = handle\r\n      a.about = ''\r\n      if (author.about) {\r\n        a.about = validLenghtStr(author.about, 'about', false)\r\n      }\r\n      a.url = author.url\r\n      return a\r\n    }\r\n  }\r\n  return null\r\n}\r\nexport function isValidAppUrl (url) {\r\n  if (isValidUrl(url) && url === appUrl) {\r\n    return true\r\n  }\r\n  logErr('Invalid app url')\r\n  return false\r\n}\r\nexport function validAppUrl (url) {\r\n  if (!isValidAppUrl(url)) {\r\n    url = appUrl\r\n  }\r\n  return url\r\n}\r\n\r\nexport function validData (nxdata) {\r\n  if (hasValidType(nxdata, 'nxdata', true)) {\r\n    var d = {}\r\n    d.nexus = validAppUrl(nxdata.nexus)\r\n    d.author = validAuthor(nxdata.author)\r\n    if (d.author) {\r\n      d.threads = validThreads(nxdata.threads)\r\n      if (d.threads.length) {\r\n        return d\r\n      }\r\n    }\r\n  }\r\n  return null\r\n}\r\n"],"names":[],"sourceRoot":""}