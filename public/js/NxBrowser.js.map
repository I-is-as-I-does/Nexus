{"version":3,"file":"js/NxBrowser.js","mappings":";;;;;;;;;;;;;;AAAO;AACA;;;;;;;;;;;;;;;;;;;;;;;ACDP;AACuF;AACd;AACgB;AACnB;AACZ;AACL;AACA;AACA;AACF;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,IAAI,sFAAO,EAAE,qCAAqC,4DAAa,CAAC;AAChE,QAAQ,uGAAa;AACrB,qBAAqB,wDAAW;AAChC,QAAQ,4DAAc;AACtB;AACA;AACA,WAAW,uFAAQ,YAAY,uFAAQ;AACvC;AACA,eAAe,+DAAU;AACzB,UAAU;AACV,eAAe,+DAAU;AACzB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,QAAQ,qFAAM;AACd,iBAAiB,4FAAa,IAAI,+DAAS;AAC3C,OAAO;AACP;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AAC0F;AACoB;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,WAAW,uGAAqB;AAChC;AACA;AACA;AACA;AACO;AACP,eAAe,4FAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP,SAAS,wFAAU;AACnB;AACA,GAAG;AACH;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qGAAmB;AAC3B;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtIA;AACsE;AACO;AACF;AACmC;AACA;AACpC;AACM;AACP;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iGAAO;AAC9B,wBAAwB,2GAAiB;AACzC,IAAI,0GAAgB;AACpB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oFAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,uBAAuB,gGAAM;AAC7B,0GAAiB;AACjB;AACA;AACA;AACO;AACP;AACA,kBAAkB,oFAAM;AACxB;AACA;AACA;AACA;AACA,MAAM,2FAAW;AACjB;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gGAAM;AAC9B,IAAI,0GAAiB;AACrB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACO;AACP;AACA,iCAAiC,oEAAe;AAChD,CAAC,sEAAiB;AAClB;AACA,GAAG;AACH;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,IAAI,sEAAiB;AACrB,MAAM,uFAAS;AACf,KAAK;AACL;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,aAAa,8FAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;;;;;;;;;;;;;;;;;;ACnTA;AACgG;AAEzD;AAIjB;AAC4D;AACT;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,yBAAyB;AACtC,aAAa;AACb,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAM;AAClB,EAAE,iEAAkB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,aAAa,qDAAM;AACnB;AACA;AACA;AACA;AACA;AACA,MAAM,qFAAO;AACb,MAAM;AACN;AACA;AACA,MAAM,oFAAM;AACZ,MAAM,gGAAkB;AACxB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAM;AACtB,cAAc,qDAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qDAAM;AACrB;AACA;AACA,CAAC,sEAAiB;AAClB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,IAAI,6FAAe;AACnB,MAAM,gGAAkB;AACxB,KAAK;AACL;AACA,IAAI,2DAAY;AAChB;AACA;AACA;AACA;AACA,QAAQ,4DAAe;AACvB,EAAE,sDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,2DAAY;AAC3B,EAAE,iEAAkB;AACpB;AACA;AACA;AACA,IAAI,kEAAa;AACjB;AACA,GAAG;AACH;AACA;AACA;AACA;AACO;AACP;AACA,SAAS,wDAAS;AAClB;;;;;;;;;;;;;;;;;;;;;;;;ACxIA;AAC2E;AACa;AACd;AACkB;AACvB;AACrE;AACA;AACA;AACA;AACA,YAAY,gGAAa;AACzB;AACA,UAAU,mFAAO;AACjB,IAAI,4FAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,kEAAa;AAC1B;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,qDAAM;AAClB;AACA;AACA;AACA;AACA,GAAG,sEAAiB;AACpB,MAAM,yFAAU;AAChB,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA,mBAAmB,qDAAM;AACzB;AACA;AACA;AACA,eAAe,qDAAM;AACrB;AACA;AACA,GAAG;AACH,aAAa,qDAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,sEAAiB;AACpB;AACA,MAAM,yFAAU;AAChB,KAAK;AACL;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,qDAAM;AACtB;AACA,CAAC,sEAAiB;AAClB;AACA,GAAG;AACH;AACA;AACO;AACP,eAAe,2DAAY;AAC3B;AACA,IAAI,iEAAkB;AACtB;AACA;AACA;AACA;AACA;AACA,IAAI,kEAAa;AACjB,GAAG;AACH;AACA;AACA;AACO;AACP,aAAa,qDAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAa;AACb,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;;;;;;;ACjHA;AAKsD;AACI;AACO;AACP;AAC1D;AACA;AACA;AACA;AACA,WAAW,qDAAM;AACjB;AACA;AACA,CAAC,sEAAiB;AAClB,IAAI,8FAAgB;AACpB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oDAAK;AACd;AACA;AACA;AACA,cAAc,qDAAM;AACpB;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA,CAAC,sEAAiB;AAClB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,WAAW,qDAAM;AACjB,YAAY,qDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qFAAO;AACb;AACA,OAAO;AACP;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA,QAAQ,8FAAgB;AACxB;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW;AACnC,MAAM,6FAAe;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,qDAAM;AACrB,gBAAgB,yDAAY,eAAe,sDAAS;AACpD;AACA;AACA;AACA;AACA;AACA,SAAS,wDAAS;AAClB;AACA;AACO;AACP;AACA,kBAAkB,qDAAM;AACxB;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5GA;AAC8C;AACN;AACsC;AAC9E;AACA;AACA;AACA,wBAAwB,qDAAM;AAC9B;AACA,kBAAkB,qDAAM;AACxB;AACA;AACA;AACA;AACA,iBAAiB,2DAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG,6FAAY;AACf;AACA;AACA;AACO;AACP,iBAAiB,qDAAM;AACvB;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AAC+E;AACiB;AAC7C;AACyC;AACvB;AACc;AACL;AACX;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qDAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,UAAU,8DAAS;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAM;AACtB;AACA;AACA;AACA,EAAE,0GAAiB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qFAAO;AACb,MAAM;AACN;AACA;AACA,MAAM,oFAAM;AACZ;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,qDAAM;AACpB;AACA;AACA;AACA,YAAY,qDAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qDAAM;AACrB;AACA;AACA;AACA,CAAC,sEAAiB;AAClB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6FAAe;AACnB,MAAM,6FAAe;AACrB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4FAAU,kCAAkC,4DAAK,EAAE,iGAAO;AACrE;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,oEAAa;AACtC;AACA;AACA,SAAS,wDAAS;AAClB;;;;;;;;;;;;;;;;;;;;;;;;;ACzIA;AAC6E;AACqC;AAC1C;AAKlD;AACkB;AACoG;AACtE;AACa;AACX;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,yBAAyB;AACtC,aAAa;AACb,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0DAAW;AAC/B;AACA;AACA;AACA;AACA,WAAW,4DAAa;AACxB,eAAe,kFAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2DAAY;AAClB;AACA;AACA,IAAI,oFAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,sFAAO;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,cAAc,qDAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wDAAS;AAClB;AACA;AACA;AACA;AACA,SAAS,wDAAS,8BAA8B,0DAAW;AAC3D;AACA;AACA;AACA,eAAe,qDAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,2DAAY;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qFAAO;AACb;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8FAAgB;AACtB,IAAI;AACJ,IAAI,6FAAe;AACnB;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,eAAe,qDAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,qDAAM;AACf,cAAc,qDAAM;AACpB,CAAC,iEAAkB;AACnB,CAAC,2DAAY;AACb;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAe;AACnB,IAAI,sDAAS;AACb,IAAI,qDAAQ;AACZ;AACA,YAAY,qDAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iGAAa;AACnC,mBAAmB,iEAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,WAAW;AACX,YAAY,oFAAM;AAClB,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW,qDAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,qDAAQ;AACtB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,oBAAoB,gBAAgB;AACpC;AACA;AACA,QAAQ,2FAAa;AACrB;AACA;AACA;AACA,OAAO;AACP,eAAe,oDAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qDAAM;AACrB,gBAAgB,6DAAc;AAC9B;AACA;AACA;AACA;AACA;AACA,iBAAiB,qDAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,qDAAM;AACjB;AACA;AACA;AACA;AACO;AACP;AACA,kBAAkB,qDAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAiB;AACjB;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7VA;AACA;AAC8C;AACA;AAErB;AACmB;AACI;AAChD;AACA;AACO;AACP;AACA,WAAW,2DAAY,CAAC,wDAAS,KAAK,0DAAW;AACjD,KAAK,2DAAY;AACjB,IAAI,2DAAc;AAClB,IAAI,6DAAe;AACnB,SAAS,yDAAW;AACpB","sources":["webpack://nexus/./src/browser/NxAppDefaults.js","webpack://nexus/./src/browser/NxStart.js","webpack://nexus/./src/browser/NxState.js","webpack://nexus/./src/viewer/NxCommons.js","webpack://nexus/./src/viewer/NxHistory.js","webpack://nexus/./src/viewer/NxIdent.js","webpack://nexus/./src/viewer/NxIndex.js","webpack://nexus/./src/viewer/NxMedia.js","webpack://nexus/./src/viewer/NxSource.js","webpack://nexus/./src/viewer/NxThread.js","webpack://nexus/./src/viewer/NxViewer.js"],"sourcesContent":["export const appIO = 'https://cdn.jsdelivr.net/gh/I-is-as-I-does/Nexus@latest/dist/js/NxIO.js'\r\nexport const appDefaultCss = 'https://cdn.jsdelivr.net/gh/I-is-as-I-does/Nexus@latest/dist/css/NexusI.min.css'","/*! Nexus | (c) 2021 I-is-as-I-does | AGPLv3 license */\r\nimport { initAll, retrieveNxElm } from \"@i-is-as-i-does/nexus-core/src/load/NxInit.js\";\r\nimport { getQuery } from \"@i-is-as-i-does/nexus-core/src/base/NxHost.js\";\r\nimport { setOriginLang } from \"@i-is-as-i-does/nexus-core/src/transl/NxCoreTranslate.js\";\r\nimport { logErr } from \"@i-is-as-i-does/nexus-core/src/logs/NxLog.js\";\r\nimport { dataToState, setOriginState } from './NxState.js'\r\nimport { editorElms } from \"./../editor/NxEditor.js\";\r\nimport { viewerElms } from \"./../viewer/NxViewer.js\";\r\nimport { errorPrgr } from \"./../viewer/NxCommons.js\";\r\nimport { appDefaultCss } from \"./NxAppDefaults.js\";\r\n\r\n\r\nfunction mountApp(nxElm, appElm){\r\n    var host = document.createElement('DIV');\r\n    host.className = \"nx\";\r\n    host.append(appElm)\r\n    nxElm.append(host)\r\n}\r\n\r\nexport function init(){\r\n    initAll({appDefaultLang: 'en', appDefaultCss: appDefaultCss}).then(seed => {\r\n        setOriginLang(seed.request.lang)\r\n        seed.state = dataToState(seed.request.url, seed.request.id, seed.nxdata)\r\n        setOriginState(seed.state)\r\n        var elm;\r\n        seed.editMode = false\r\n        if(getQuery(\"edit\") || getQuery(\"new\")){\r\n          seed.editMode = true\r\n         elm = editorElms(seed);\r\n        } else {\r\n         elm = viewerElms(seed);\r\n        }\r\n\r\n      mountApp(seed.nxelm, elm)\r\n\r\n    }).catch((err)=> {\r\n      console.log(err)\r\n        logErr(err.message);\r\n        mountApp(retrieveNxElm(), errorPrgr())\r\n      })\r\n}","/*! Nexus | (c) 2021 I-is-as-I-does | AGPLv3 license */\r\n\r\nimport { getSrcData, getThreadsList } from \"@i-is-as-i-does/nexus-core/src/load/NxSrc.js\";\r\nimport { isThreadContentUnseen, registerThreadVisit } from \"@i-is-as-i-does/nexus-core/src/storg/NxMemory.js\";\r\n\r\nconst bufferTime = 400;\r\nvar currentState = {\r\n      dataUrl: null,\r\n      srcData: null,\r\n      threadId: \"/\",\r\n      threadIndex: -1\r\n    };\r\n    \r\nvar updateStore = { onChange: [], onSrcChange: [] };\r\nvar updateRunning = false;\r\n\r\nfunction triggerCallbacks(state,triggerAll) {\r\n  var ks = [\"onChange\"];\r\n  if (triggerAll) {\r\n    ks.push(\"onSrcChange\");\r\n  }\r\n\r\n  ks.forEach((k) => {\r\n    if (updateStore[k].length) {\r\n     updateStore[k].forEach((callback) => {\r\n        callback(state);\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nfunction updateTimeout() {\r\n  setTimeout(\r\n    function () {\r\n      updateRunning = false;\r\n    },\r\n    bufferTime\r\n  );\r\n}\r\n\r\nexport function concatSrc(state){\r\n  var src = state.dataUrl\r\n  if(state.threadId !== '/'){\r\n    src += '#'+state.threadId\r\n  }\r\n return src\r\n}\r\n\r\nexport function getTimestamp(state){\r\n  if (state.threadIndex !== -1) {\r\nreturn state.srcData.threads[state.threadIndex].content.timestamp\r\n  }\r\n  return null\r\n}\r\n\r\nexport function isStateUnseen(state){\r\n  if (state.threadId !== '/') {\r\n    return isThreadContentUnseen(concatSrc(state), getTimestamp(state))\r\n  }\r\n  return false\r\n}\r\n\r\nexport function dataToState(dataUrl, threadId, data){\r\n  data.index = getThreadsList(data)\r\n    var state = {\r\n      dataUrl: dataUrl,\r\n      threadId: threadId,\r\n      srcData: data,\r\n      threadIndex: data.index.indexOf(threadId)\r\n    };\r\n\r\n    if (state.threadIndex === -1) {\r\n      setDefaultThread(state)\r\n    }\r\n    return state;\r\n}\r\n\r\nexport function setDefaultThread(state){\r\n  state.threadIndex = 0\r\n  state.threadId = state.srcData.index[0]\r\n}\r\n\r\nexport function resolveState(dataUrl, threadId) {\r\n  return getSrcData(dataUrl).then((data) => {\r\n  return dataToState(dataUrl, threadId, data)\r\n  });\r\n}\r\n\r\nexport function registerUpdateEvt(callback, onSrcChange = false) {\r\n  var k = \"onChange\";\r\n  if (onSrcChange) {\r\n    k = \"onSrcChange\";\r\n  }\r\n  updateStore[k].push(callback);\r\n}\r\n\r\nexport function triggerUpdate(state, skipHistoryUpdate = false, forceTrigger = false) {\r\n  if (!updateRunning) {\r\n    var srcChanged = state.dataUrl != currentState.dataUrl;\r\n    if(state.threadId === '/'){\r\n      setDefaultThread(state)\r\n    }\r\n\r\n    if (forceTrigger || srcChanged || state.threadId != currentState.threadId) {\r\n      updateRunning = true;\r\n      if (!skipHistoryUpdate) {\r\n        registerThreadVisit(concatSrc(currentState), getTimestamp(currentState));\r\n      }\r\n    \r\n      var resetIndex = srcChanged || forceTrigger;\r\n      currentState = Object.assign({},state);\r\n\r\n      triggerCallbacks(state, resetIndex);\r\n      updateTimeout();\r\n    }\r\n  }\r\n}\r\n\r\nexport function getCurrentState() {\r\n  return currentState;\r\n}\r\n\r\nexport function setOriginState(state) {\r\n  if (!currentState.dataUrl) {\r\n    currentState = state;\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function getBuffertime(){\r\n  return bufferTime;\r\n}\r\n\r\n\r\n","/*! Nexus | (c) 2021 I-is-as-I-does | AGPLv3 license */\r\nimport { getErr } from \"@i-is-as-i-does/nexus-core/src/logs/NxLog.js\";\r\nimport { isCssLoaded } from \"@i-is-as-i-does/nexus-core/src/load/NxStyle.js\";\r\nimport { getCurrentState, registerUpdateEvt } from \"../browser/NxState.js\";\r\nimport { registerTranslElm, triggerTranslate } from \"@i-is-as-i-does/nexus-core/src/transl/NxElmTranslate.js\";\r\nimport { getAvailableLangs, getLang, getTxt } from \"@i-is-as-i-does/nexus-core/src/transl/NxCoreTranslate.js\";\r\nimport { appUrl } from \"@i-is-as-i-does/nexus-core/src/validt/NxSpecs.js\";\r\nimport { splitOnLineBreaks } from \"@i-is-as-i-does/jack-js/src/modules/Help.js\";\r\nimport { splitFlap } from \"@i-is-as-i-does/valva/src/legacy/Valva-v1.js\";\r\n\r\nfunction resolveThreadTitle(state) {\r\n  var threadTitle = \"/\";\r\n  if (state.threadId && state.threadId != \"/\") {\r\n    threadTitle = state.srcData.threads[state.threadIndex].title;\r\n  }\r\n  return threadTitle;\r\n}\r\n\r\n\r\nfunction toggleOnDisplay(viewlk, givenState, newState) {\r\n  if (newState.dataUrl && givenState.dataUrl == newState.dataUrl && givenState.threadId == newState.threadId) {\r\n    viewlk.classList.add(\"nx-on-display\");\r\n  } else {\r\n    viewlk.classList.remove(\"nx-on-display\");\r\n  }\r\n}\r\n\r\nfunction langDropDown() {\r\n  var toggle = getElm('P');\r\n  toggle.textContent = getLang()\r\n  return selectDropDown(getAvailableLangs(), toggle, function(nlang){\r\n    triggerTranslate(nlang);\r\n  }, \"nx-lang-switch\");\r\n}\r\n\r\n\r\nfunction appLink() {\r\n  var link = getElm(\"A\", \"nx-app-link nx-external-link\");\r\n  link.target = \"_blank\";\r\n  link.href = appUrl;\r\n  link.title = \"Nexus\";\r\n  link.textContent = \"Nexus\";\r\n  return link;\r\n}\r\n\r\n\r\nfunction appMain(serviceElms){\r\nvar main = getElm('MAIN');\r\nmain.append(...serviceElms);\r\nreturn main;\r\n}\r\n\r\n\r\n\r\nexport function appHeader() {\r\n  var header = getElm('HEADER');\r\n  header.append(appLink());\r\n  return header;\r\n}\r\n\r\nexport function appHeaderWithLang() {\r\n  var header = appHeader()\r\n  header.append(langDropDown());\r\n  return header;\r\n}\r\n\r\n\r\nexport function getElm(tag, classList) {\r\n  var elm = document.createElement(tag);\r\n  if (classList) {\r\n    elm.className = classList; \r\n  }\r\n  return elm;\r\n}\r\n\r\nexport function instanceWrap(appHeader, serviceElms){\r\n  var inst = getElm(\"DIV\", \"nx-instance\");\r\n  inst.append(appHeader, appMain(serviceElms));\r\n  return inst;\r\n}\r\n\r\nexport function serviceWrap\r\n(navElms, mainElms, footerElms = [], service = 'viewer') {\r\n  var wrap = getElm(\"DIV\", \"nx-\"+service);\r\n  var nav = getElm(\"NAV\");\r\n  nav.append(...navElms);\r\n  var bd = getElm(\"SECTION\");\r\n  bd.append(...mainElms);\r\n  wrap.append(nav, bd);\r\n  if(footerElms.length){\r\n    var footer = getElm(\"FOOTER\");\r\n    footer.append(...footerElms);\r\n    wrap.append(footer);\r\n  }\r\n  return wrap;\r\n}\r\n\r\n// @todo update, no use of headers nor landmark ?\r\nexport function blockWrap(\r\n  blockName,\r\n  headerElms = null,\r\n  contentElms = null,\r\n  landmark = false\r\n) {\r\n  var dv = getElm(\"DIV\", \"nx-\" + blockName + \" nx-block\");\r\n  if (landmark) {\r\n    dv.append(landmark);\r\n  }\r\n  if (headerElms) {\r\n    var header = getElm(\"DIV\",\"nx-thread-header\");\r\n    header.append(...headerElms);\r\n    dv.append(header);\r\n  }\r\n  if (contentElms) {\r\n    dv.append(...contentElms);\r\n  }\r\n  return dv;\r\n}\r\n\r\nexport function landmarkElm(name) {\r\n  var lndmrk = getElm(\"SPAN\", \"nx-landmark nx-landmark-\"+name.replace(\" \", \"-\"));\r\n  lndmrk.textContent = getTxt(name);\r\nregisterTranslElm(lndmrk, name);\r\n  return lndmrk;\r\n}\r\n\r\nexport function errorPrgr() {\r\n\r\n    var errMsgs = getErr();\r\n    if(!errMsgs.length){\r\n      errMsgs = [\"Init failed\"];\r\n    }\r\n  var p = getElm(\"P\");\r\n  if (isCssLoaded()) {\r\n    p.className = \"nx-error\";\r\n  } else {\r\n    p.style.margin = \"0 auto\";\r\n    p.style.fontFamily = '\"Courier New\", Courier, monospace';\r\n    p.style.fontSize = \"13px\";\r\n  }\r\n\r\n    var br = getElm('BR');\r\n    var sp1 = getElm(\"SPAN\");\r\n    sp1.textContent = \"—/ — \";\r\n    p.append(sp1, br);\r\n    errMsgs.forEach((msg) => {\r\n      var spx = getElm(\"SPAN\");\r\n      spx.textContent = getTxt(msg);\r\n    registerTranslElm(spx, msg);\r\n      p.append(spx, br.cloneNode());\r\n    });\r\n  \r\n  return p;\r\n}\r\n\r\n\r\nexport function toggleNavEnd(map) {\r\n\r\n  if (map.position > 0) {\r\n    map.ctrls[\"prev\"].elm.classList.remove(\"nx-nav-end\");\r\n  } else {\r\n    map.ctrls[\"prev\"].elm.classList.add(\"nx-nav-end\");\r\n  }\r\n  if (map.position < map.count-1) {\r\n    map.ctrls[\"next\"].elm.classList.remove(\"nx-nav-end\");\r\n  } else {\r\n    map.ctrls[\"next\"].elm.classList.add(\"nx-nav-end\");\r\n  }\r\n}\r\n\r\n\r\nexport function setHistoryControls(map, triggerCallback){\r\n  Object.keys(map.ctrls).forEach((ctrl) => {\r\n    map.ctrls[ctrl].elm = getElm(\"A\", \"nx-nav-ctrl nx-nav-end\");\r\n    map.ctrls[ctrl].elm.textContent = map.ctrls[ctrl].symbol;\r\n    map.ctrls[ctrl].elm.addEventListener(\"click\", function () {\r\n      if (!map.ctrls[ctrl].elm.classList.contains(\"nx-nav-end\")) {\r\n        if (ctrl == \"next\") {\r\n          map.position++;\r\n        } else {\r\n          map.position--;\r\n        }\r\n        triggerCallback(ctrl);\r\n        toggleNavEnd(map);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nexport function selectDropDown(list, toggleElm, actionCallback = null, switchClass = null){\r\n  var selectedClass = \"nx-selected\";\r\n  toggleElm.classList.add('nx-select-toggle');\r\n  var isInput = toggleElm.tagName == 'INPUT';\r\n  var firstValue;\r\n  if(isInput){\r\n    toggleElm.setAttribute(\"autocomplete\",\"off\");\r\n    firstValue = toggleElm.value;\r\n  } else {\r\n    firstValue = toggleElm.textContent;\r\n  }\r\n\r\n\r\n  var drp = getElm(\"UL\", \"nx-select-list\");\r\n  \r\n  var swtch = getElm(\"DIV\", \"nx-select\");\r\n  if(switchClass){\r\n    swtch.classList.add(switchClass);\r\n  }\r\n  swtch.append(toggleElm, drp);\r\n\r\n  toggleElm.addEventListener(\"click\", () => {\r\n    var styl = \"none\";\r\n    if (drp.style.display == styl) {\r\n      styl = \"block\";\r\n    }\r\n    drp.style.display = styl;\r\n  });\r\n  \r\n  list.forEach((itm) => {\r\n\r\n    var li = getElm(\"LI\");\r\n    li.textContent = itm;\r\n    li.dataset.item = itm;\r\n    if (itm == firstValue) {\r\n      li.classList.add(selectedClass);\r\n    }\r\n    \r\n    drp.append(li);\r\n    li.addEventListener(\"click\", () => {   \r\n      var nitm = li.textContent;\r\n      var currVal;\r\n      if(isInput){\r\n        currVal = toggleElm.value;\r\n       } else {\r\n        currVal = toggleElm.textContent;\r\n       }\r\n       if(currVal != nitm){\r\n        if(!li.classList.contains(selectedClass)){      \r\n          var prev = drp.querySelector(\".\" + selectedClass);\r\n          if(prev){\r\n            prev.classList.remove(selectedClass);\r\n          }         \r\n          li.classList.add(selectedClass);\r\n        }\r\n        if(isInput){\r\n          toggleElm.value = nitm;\r\n         } else {\r\n         toggleElm.textContent = nitm;\r\n         }\r\n         toggleElm.dispatchEvent(new window.Event('change'));\r\n        if (typeof actionCallback === \"function\") {\r\n          actionCallback(nitm);\r\n        }\r\n       }\r\n\r\n      drp.style.display = \"none\";\r\n    });\r\n\r\n  });\r\n  drp.style.display = \"none\";\r\n\r\n  return swtch;\r\n}\r\n\r\nexport function setToggleOnDisplay(viewlk, state) {\r\n\r\n  toggleOnDisplay(viewlk, state, getCurrentState());\r\n registerUpdateEvt(function (newState) {\r\n    toggleOnDisplay(viewlk, state, newState);\r\n  });\r\n}\r\n\r\nexport function baseViewLink(state, update = false) {\r\n  var viewlk = getElm(\"A\", \"nx-view-link\");\r\n  viewlk.append(threadTitleElm(state, update));\r\n  return viewlk;\r\n}\r\n\r\nexport function threadTitleElm(state, update = false) {\r\n  var sp = getElm(\"SPAN\", \"nx-thread-title\");\r\n  sp.textContent = resolveThreadTitle(state);\r\n  if (update) {\r\n    registerUpdateEvt(function (newState) {\r\n      splitFlap(sp, resolveThreadTitle(newState), 15)\r\n    });\r\n  }\r\n\r\n  return sp;\r\n}\r\n\r\nexport function lines(text) {\r\n  var dv = getElm(\"DIV\", \"nx-lines\");\r\n  if(text){   \r\n    var sp = splitOnLineBreaks(text)\r\n    var ln = []\r\n    sp.forEach(l => {\r\n      var p = getElm('P')\r\n      p.textContent = l\r\n      ln.push(p)\r\n    })\r\n    dv.append(...ln);\r\n}\r\n  return dv;\r\n}\r\nexport function spinContainer() {\r\n  var container = getElm(\"DIV\", \"nx-loading\");\r\n  return container\r\n}","/*! Nexus | (c) 2021 I-is-as-I-does | AGPLv3 license */\r\nimport { easeIn, easeOut, insertDiversion } from \"@i-is-as-i-does/valva/src/legacy/Valva-v1.js\";\r\nimport { blockWrap, getElm, setHistoryControls, toggleNavEnd,setToggleOnDisplay,\r\n  baseViewLink } from \"./NxCommons.js\";\r\nimport {\r\n  authorIndexLink,\r\n  authorUrl\r\n} from \"./NxIdent.js\";\r\nimport { autoScrollToBottom } from \"@i-is-as-i-does/jack-js/src/modules/Style.js\";\r\nimport { registerUpdateEvt, triggerUpdate } from \"../browser/NxState.js\";\r\n\r\nconst historyMax = 100;\r\nvar isHistoryEvent = false;\r\nvar historyList = null;\r\nvar historyElm = null;\r\n\r\nvar historyState = {\r\n  dataUrl: null,\r\n  srcData: null,\r\n  threadId: \"/\",\r\n  threadIndex: -1\r\n};\r\n\r\nvar histCtrls = {\r\n  \"ctrls\":{\r\n    \"prev\": {\"symbol\":\"<\", \"elm\":null},\r\n    \"next\": {\"symbol\":\">\", \"elm\":null}\r\n  },\r\n   position:0,\r\n   count:1\r\n }\r\n\r\n\r\nfunction historyNav() {\r\n  var wrp = getElm(\"DIV\", \"nx-history-nav\");\r\n  setHistoryControls(histCtrls, function(ctrl){\r\n    var postn = histCtrls.position;\r\n    if(ctrl == 'prev'){\r\n      postn += 1;\r\n    }\r\n    var target =\r\n    historyList.children[postn].querySelector(\r\n      \".nx-thread-title\"\r\n    );\r\n  target.click();\r\n  });\r\n  wrp.append(histCtrls.ctrls[\"prev\"].elm,historyToggleElm(),histCtrls.ctrls[\"next\"].elm);\r\n  return wrp;\r\n}\r\nfunction historyToggleElm() {\r\n  var tggl = getElm(\"A\", \"nx-history-toggle\");\r\n  tggl.textContent = \"≚\";\r\n  tggl.addEventListener(\"click\", () => {\r\n    if (tggl.textContent == \"≙\") {\r\n      tggl.textContent = \"≚\";\r\n      tggl.classList.remove(\"nx-active\");\r\n      easeOut(historyElm, 200);\r\n    } else {\r\n      tggl.textContent = \"≙\";\r\n      tggl.classList.add(\"nx-active\");\r\n      easeIn(historyElm, 200);\r\n      autoScrollToBottom(historyList);\r\n    }\r\n  });\r\n  return tggl;\r\n}\r\n\r\nfunction setHistoryListElm(state) {\r\n\r\n  historyList = getElm(\"UL\", \"nx-history-list\");\r\n  var first = getElm(\"LI\");\r\n  first.textContent = \"...\";\r\n  historyList.append(first);\r\n  if(state && state.srcData){\r\n  historyState = state;\r\n  historyList.append(historyItm(state));\r\n}\r\n  historyElm = getElm(\"DIV\", \"nx-history-drawer\");\r\n  historyElm.append(historyList);\r\n  historyElm.style.display = \"none\";\r\n registerUpdateEvt(function (newState) {\r\n    historyEvent(newState);\r\n  });\r\n\r\n}\r\n\r\n\r\nfunction historyEvent(state) {\r\n\r\n  if (!isHistoryEvent && (state.dataUrl != historyState.dataUrl || state.threadId != historyState.threadId)) {\r\n    historyState = state;\r\n    if (histCtrls.count > historyMax) {\r\n      historyList.children[1].remove();      \r\n    } else {\r\n      histCtrls.count++;\r\n    }\r\n\r\n    histCtrls.position = histCtrls.count-1;\r\n    var itm = historyItm(state);\r\n    insertDiversion(historyList, itm, false, true, 200, function () {\r\n      autoScrollToBottom(historyList);\r\n    });\r\n\r\n    toggleNavEnd(histCtrls);\r\n  }\r\n}\r\n\r\nfunction viewElms(state){\r\nreturn [authorIndexLink(state, false),\r\n  authorUrl(state, false),\r\n  historyViewLink(state, false)];\r\n}\r\n\r\nfunction historyItm(state) {\r\n\r\n  var itm = document.createElement(\"LI\");\r\n    itm.append(...viewElms(state));\r\n  return itm;\r\n}\r\n\r\nfunction historyViewLink(state) {\r\n  var viewlk = baseViewLink(state, false);\r\n  setToggleOnDisplay(viewlk, state);\r\n\r\n  viewlk.addEventListener(\"click\", () => {\r\n    isHistoryEvent = true;\r\n    triggerUpdate(state, true);\r\n    isHistoryEvent = false;\r\n  });\r\n  return viewlk;\r\n}\r\n\r\n\r\nexport function historyBlock(state) {\r\n  setHistoryListElm(state);\r\n  return blockWrap(\"history\", null, [historyNav(), historyElm], false);\r\n}\r\n","/*! Nexus | (c) 2021 I-is-as-I-does | AGPLv3 license */\r\nimport { vSplitFlap } from \"@i-is-as-i-does/valva/src/modules/transitions\";\r\nimport { registerUpdateEvt, triggerUpdate, isStateUnseen } from \"../browser/NxState.js\";\r\nimport { baseViewLink, getElm, setToggleOnDisplay } from \"./NxCommons.js\";\r\nimport { getStoredItem, storeItem } from '@i-is-as-i-does/nexus-core/src/storg/NxStorage.js'\r\nimport { miniUrl } from \"@i-is-as-i-does/jack-js/src/modules/Web.js\";\r\n\r\nvar urlStore = {}\r\n\r\nfunction authorMiniUrl(authorUrl) {\r\n  var url = getStoredItem(authorUrl,\"local\",urlStore, false);\r\n  if(!url){\r\n    url = miniUrl(authorUrl);\r\n    storeItem(authorUrl, url, \"local\", urlStore,false);\r\n  }\r\n  return url;\r\n}\r\n\r\n\r\nfunction toggleUnseen(viewlk, state) {\r\n  if (viewlk.classList.contains(\"nx-on-display\")) {\r\n    viewlk.classList.remove(\"nx-unseen\");\r\n    viewlk.lastChild.textContent = \"\";\r\n  } else if (isStateUnseen(state)) {\r\n    viewlk.classList.add(\"nx-unseen\");\r\n    viewlk.lastChild.textContent = \"*\";\r\n  }\r\n}\r\n\r\nexport function authorHandle(state, update = false) {\r\n  var hnd = getElm(\"SPAN\", \"nx-handle\");\r\n  if(state.srcData){\r\n  hnd.textContent = state.srcData.author.handle;\r\n}\r\n  if (update) {\r\n   registerUpdateEvt(function (newState) {\r\n      vSplitFlap(hnd, newState.srcData.author.handle, 25);\r\n    }, true);\r\n  }\r\n  return hnd;\r\n}\r\n\r\nexport function authorUrl(state, update = false) {\r\n\r\n  var authorlksp = getElm(\"SPAN\",\"nx-author-url\");\r\n \r\n  var urlBrck = [];\r\n  [\"[\", \"]\"].forEach((bracket) => {\r\n    var brsp = getElm(\"SPAN\", \"nx-author-url-brackets\");\r\n    brsp.textContent = bracket;\r\n    urlBrck.push(brsp);\r\n  });\r\n  var urla = getElm(\"A\", \"nx-external-link\");\r\n  urla.target = \"_blank\";\r\n  var hrf = '';\r\n  if(state.srcData){\r\n hrf = state.srcData.author.url;\r\n  }\r\n  urla.href =hrf;\r\n  \r\n  if(state.srcData){\r\n    urla.textContent = authorMiniUrl(state.srcData.author.url);\r\n  }\r\n  \r\n  authorlksp.append(urlBrck[0], urla, urlBrck[1]);\r\n\r\n  if (update) {\r\n   registerUpdateEvt(function (newState) {\r\n      urla.href = newState.srcData.author.url;\r\n      vSplitFlap(urla, authorMiniUrl(newState.srcData.author.url), 25);\r\n    }, true);\r\n  }\r\n  return authorlksp;\r\n}\r\n\r\n\r\nexport function setToggleUnseen(viewlk, state) {\r\n  viewlk.append(getElm(\"SPAN\", \"nx-new-tag\"));\r\n  toggleUnseen(viewlk, state);\r\n registerUpdateEvt(function () {\r\n    toggleUnseen(viewlk, state);\r\n  });\r\n}\r\n\r\nexport function viewLink(state, update = false) {\r\n  var viewlk = baseViewLink(state, update);\r\n  if (state.threadId != \"/\") {\r\n    setToggleOnDisplay(viewlk, state);\r\n    setToggleUnseen(viewlk, state);\r\n  }\r\n\r\n  viewlk.addEventListener(\"click\", () => {\r\n \r\n    triggerUpdate(state);\r\n  });\r\n  return viewlk;\r\n}\r\n\r\nexport function authorIndexLink(state, update = false) {\r\n  var auth = getElm(\"A\", \"nx-author-link\");\r\n  auth.append(authorHandle(state, update));\r\n\r\n  var newState = {\r\n    dataUrl: state.dataUrl,\r\n    srcData: state.srcData,\r\n    threadId: \"/\",\r\n    threadIndex: -1\r\n  };\r\n  auth.addEventListener(\"click\", function () {\r\ntriggerUpdate(newState, \"/\");\r\n  });\r\n\r\n  return auth;\r\n}\r\n","/*! Nexus | (c) 2021 I-is-as-I-does | AGPLv3 license */\r\nimport {\r\n  easeOut,\r\n  insertDiversion,\r\n  replaceDiversion,\r\n} from \"@i-is-as-i-does/valva/src/legacy/Valva-v1.js\";\r\nimport { registerUpdateEvt } from \"../browser/NxState.js\";\r\nimport { authorHandle, authorUrl, viewLink } from \"./NxIdent.js\";\r\nimport { blockWrap, getElm, lines } from \"./NxCommons.js\";\r\n\r\nvar indexList = null;\r\n\r\nfunction aboutElm(state) {\r\n  var ab = getElm(\"DIV\", \"nx-about-author\");\r\n\r\n  ab.append(aboutLines(state));\r\n registerUpdateEvt(function (newState) {\r\n    replaceDiversion(ab.firstChild, aboutLines(newState));\r\n  }, true);\r\n  return ab;\r\n}\r\n\r\nfunction aboutLines(state) {\r\n  var text = null\r\nif(state.srcData && state.srcData.author.about){\r\ntext = state.srcData.author.about\r\n}\r\n  return lines(text);\r\n}\r\n\r\nfunction setIndexList(state) {\r\n  indexList = getElm(\"UL\");\r\n  if(state.srcData){\r\n  var items = state.srcData.index;\r\n\r\n  if (items.length) {\r\n    for (var i = 0; i < items.length; i++) {\r\n      indexList.append(indexLi(state, items[i], i));\r\n    }\r\n  }\r\n}\r\n registerUpdateEvt(function (newState) {\r\n\r\n    changeThreadsList(newState);\r\n  }, true);\r\n\r\n}\r\n\r\nfunction indexLi(state, id, index) {\r\n  var altState = Object.assign({}, state);\r\n\r\n  altState.threadId = id;\r\n  altState.threadIndex = index;\r\n\r\n  var li = getElm(\"LI\");\r\n  li.append(viewLink(altState, false));\r\n  return li;\r\n}\r\n\r\nfunction changeThreadsList(state) {\r\n\r\n  var childr = indexList.childNodes;\r\n  var items = state.srcData.index;\r\n  var nwlen = items.length;\r\n\r\n  var chlen = childr.length;\r\n\r\n  var count = 0;\r\n  if (chlen) {\r\n    var rmv = function (child) {\r\n      easeOut(child, 200, function () {\r\n        child.remove();\r\n      });\r\n    };\r\n    for (var x = 0; x < chlen; x++) {\r\n      if (nwlen > x) {\r\n        var nlink = indexLi(state, items[x], x);\r\n        replaceDiversion(childr[x], nlink);\r\n        count++;\r\n      } else {\r\n        rmv(childr[x]);\r\n      }\r\n    }\r\n  }\r\n  if (count < nwlen) {\r\n    for (var y = count; y < nwlen; y++) {\r\n      insertDiversion(indexList, indexLi(state, items[y], y), false, true, 200);\r\n    }\r\n  }\r\n}\r\n\r\nfunction indexHeader(state){\r\n  var header = getElm('DIV','nx-index-header')\r\n  header.append(authorHandle(state, true), authorUrl(state, true), aboutElm(state))\r\n  return header\r\n}\r\n\r\nfunction indexBlock(state){\r\n  setIndexList(state);\r\n  return blockWrap(\"threads-list\", null, [indexList]);\r\n}\r\n\r\nexport function mainIndexBlock(state) {\r\n\r\n  var mainBlock = getElm('DIV', 'nx-main-block nx-index')\r\n  var blocks = [indexHeader(state), indexBlock(state)];\r\n  mainBlock.append(...blocks)\r\n  return mainBlock\r\n}\r\n","/*! Nexus | (c) 2021 I-is-as-I-does | AGPLv3 license */\r\nimport { threadTextElm } from \"./NxThread.js\";\r\nimport { getElm } from \"./NxCommons.js\";\r\nimport { resolveMedia } from \"@i-is-as-i-does/nexus-core/src/data/NxMedia.js\";\r\n\r\n\r\nfunction threadMediaElm(threadData, countReady) {\r\n  var  mediaContainer = getElm(\"DIV\", 'nx-media');\r\n\r\n  var mediaWrap = getElm(\"DIV\");\r\n  mediaContainer.append(mediaWrap)\r\n\r\n  var captionElm = null\r\n  if(threadData.content.media.caption){\r\n    captionElm = threadTextElm(threadData, [\"content\", \"media\", \"caption\"])\r\n    mediaContainer.append(captionElm)\r\n  }\r\n\r\n  mediaWrap.addEventListener('mediaReady', function(){\r\n      if(mediaWrap.firstChild.tagName === 'A' && threadData.content.media.type !== 'page'){\r\n        threadData.content.media.type = 'page';\r\n      }\r\n      mediaWrap.className = \"nx-\" + threadData.content.media.type + \"-media\";\r\n      if(countReady !== null){\r\n        countReady()\r\n      }\r\n    })\r\n   resolveMedia(threadData.content.media.url, threadData.content.media.type, mediaWrap)\r\n  return mediaContainer\r\n}\r\n\r\nexport function mediaElm(threadData, countReady = null) {\r\n  var mediadiv = getElm(\"DIV\", \"nx-content-media\");\r\n    mediadiv.append(threadMediaElm(threadData, countReady));\r\n  return mediadiv;\r\n}\r\n","/*! Nexus | (c) 2021 I-is-as-I-does | AGPLv3 license */\r\nimport { copyToClipboard } from \"@i-is-as-i-does/jack-js/src/modules/Stock.js\";\r\nimport { timedFadeToggle, easeOut, easeIn } from \"@i-is-as-i-does/valva/src/legacy/Valva-v1.js\";\r\nimport { blockWrap, getElm } from \"./NxCommons.js\";\r\nimport { registerTranslElm } from \"@i-is-as-i-does/nexus-core/src/transl/NxElmTranslate.js\";\r\nimport { concatSrc, registerUpdateEvt } from \"../browser/NxState.js\";\r\nimport { getLang } from \"@i-is-as-i-does/nexus-core/src/transl/NxCoreTranslate.js\";\r\nimport { getSnippet } from \"@i-is-as-i-does/nexus-core/src/data/NxSnippet.js\";\r\nimport { appDefaultCss, appIO } from \"../browser/NxAppDefaults.js\";\r\n\r\nvar drawerElm = null;\r\nvar editMode = false;\r\nvar currentStyle = null\r\n\r\nfunction actionLink(action, text) {\r\n  var lk = getElm(\"A\", \"nx-source-\" + action);\r\n  lk.textContent = text;\r\n  return lk;\r\n}\r\n\r\nfunction resolveSrc(state){\r\n  var src\r\n  if(editMode){\r\n    src = \"#temp\";\r\n  } else  {\r\n    src = concatSrc(state)\r\n  }\r\n  return src;\r\n}\r\n\r\nfunction linkContent(state) {\r\n  if(state.dataUrl){\r\n  return resolveSrc(state)\r\n}\r\nreturn \"\";\r\n}\r\n\r\nfunction toolTip(className, text) {\r\n  var tooltip = getElm(\"SPAN\", className);\r\n  tooltip.textContent = text;\r\n  tooltip.style.opacity = 0;\r\n  tooltip.hidden = true;\r\n  registerTranslElm(tooltip, text);\r\n  return tooltip;\r\n}\r\n\r\nfunction toggleLink() {\r\n  var text = \"</>\";\r\n  var altText = \"< />\";\r\n  var lk = actionLink(\"snippets\", text);\r\n\r\n  lk.addEventListener(\"click\", () => {\r\n    if (lk.textContent == altText) {\r\n      lk.textContent = text;\r\n      lk.classList.remove(\"nx-active\");\r\n      easeOut(drawerElm, 200);\r\n    } else {\r\n      lk.textContent = altText;\r\n      lk.classList.add(\"nx-active\");\r\n      easeIn(drawerElm, 100, function () {\r\n        drawerElm.scrollIntoView({\r\n          block: \"end\",\r\n          behavior: \"smooth\",\r\n          inline: \"nearest\",\r\n        });\r\n      });\r\n    }\r\n  });\r\n  return lk;\r\n}\r\n\r\nfunction linkSource(state){\r\n  return codeElm(\"json\", textAreaElm(state, linkContent));\r\n}\r\n\r\nfunction snippetsBundle(state) {\r\n  drawerElm = getElm(\"DIV\", \"nx-source-drawer\");\r\n  drawerElm.append(linkSource(state), embedSnippet(state));\r\n  drawerElm.style.display = \"none\";\r\n\r\n  var tgg = getElm(\"DIV\", \"nx-source-toggle\");\r\n  var snippetLink = toggleLink();\r\n  tgg.append(snippetLink);\r\n\r\n  return [tgg, drawerElm];\r\n}\r\n\r\nfunction textAreaElm(state, callback) {\r\n  var snpInp = getElm(\"TEXTAREA\");\r\n  snpInp.spellcheck = false;\r\n  snpInp.textContent = callback(state);\r\n\r\n registerUpdateEvt(function (newState) {\r\n    snpInp.textContent = callback(newState);\r\n  });\r\n  return snpInp;\r\n}\r\n\r\nfunction copyLink(snpElm) {\r\n  var copyLk = actionLink(\"copy\", \"⧉\");\r\n  var copyTooltip = toolTip(\"nx-source-copy-tooltip\",'c/c');\r\n  copyLk.append(copyTooltip);\r\n\r\n  copyLk.addEventListener(\"click\", () =>\r\n    copyToClipboard(snpElm.textContent, () => {\r\n      timedFadeToggle(copyTooltip, 1000);\r\n    })\r\n  );\r\n  return copyLk;\r\n}\r\n\r\nfunction codeElm(name, elm) {\r\n  var snp = getElm(\"DIV\", \"nx-\" + name + \"-snippet\");\r\n  snp.append(elm, copyLink(elm));\r\n  return snp;\r\n}\r\n\r\nfunction embedSnippet(state) {\r\n  return codeElm(\"embed\", textAreaElm(state, embedContent));\r\n}\r\n\r\nfunction embedContent(state) {\r\n\r\n  if(state.dataUrl){\r\n    return getSnippet(resolveSrc(state), currentStyle, appIO, getLang())\r\n  }\r\n  return \"\";\r\n}\r\n\r\nexport function sourceBlock(state, currentStyleUrl, editionSource = false) {\r\n  if(editionSource){\r\n    editMode = true;\r\n  }\r\n  if(currentStyleUrl !== appDefaultCss){\r\n    currentStyle = currentStyleUrl\r\n  }\r\n  return blockWrap(\"source\", null, snippetsBundle(state), false);\r\n}\r\n","/*! Nexus | (c) 2021 I-is-as-I-does | AGPLv3 license */\r\nimport { isNonEmptyStr } from \"@i-is-as-i-does/jack-js/src/modules/Check.js\";\r\nimport { easeIn, easeOut, insertDiversion, replaceDiversion } from \"@i-is-as-i-does/valva/src/legacy/Valva-v1.js\";\r\nimport { registerUpdateEvt, resolveState } from \"../browser/NxState.js\";\r\nimport {\r\n  authorIndexLink,\r\n  authorUrl,\r\n  viewLink,\r\n} from \"./NxIdent.js\";\r\nimport { mediaElm } from \"./NxMedia.js\";\r\nimport { blockWrap, getElm,  landmarkElm,  lines,  setHistoryControls,  threadTitleElm, toggleNavEnd, spinContainer } from \"./NxCommons.js\";\r\nimport { logErr } from \"@i-is-as-i-does/nexus-core/src/logs/NxLog.js\";\r\nimport { splitUrlAndId } from \"@i-is-as-i-does/nexus-core/src/validt/NxStamper.js\";\r\nimport { Spinner } from \"@i-is-as-i-does/nexus-core/src/data/NxSpin.js\";\r\n\r\nvar threadBlocks\r\n\r\nvar currentElm;\r\nvar descrpElm;\r\nvar contentElm;\r\nvar distantNav;\r\n\r\nvar slider;\r\nvar linked = [];\r\n\r\nvar spinElm;\r\nvar spinner;\r\nvar ready = 0\r\n\r\nvar linkedCtrls = {\r\n  \"ctrls\":{\r\n    \"prev\": {\"symbol\":\"⊼\", \"elm\":null},\r\n    \"next\": {\"symbol\":\"⊻\", \"elm\":null}\r\n  },\r\n   position:0,\r\n   count:0\r\n }\r\n\r\n var distantLandmark;\r\n\r\n function setDistantLandmark(){\r\n  distantLandmark = landmarkElm(\"distant\");\r\n  distantLandmark.style.display =\"none\";\r\n }\r\n\r\n function setSpinner(){\r\n spinElm = spinContainer()\r\n spinner = new Spinner(spinElm)\r\n }\r\n\r\nfunction countReady(){\r\n  ready++\r\nif(ready === 2){\r\n  spinner.endSpin()\r\n  spinElm.style.display = 'none'\r\n    if(linked.length){\r\n      linkedCtrls.count = linked.length;\r\n      toggleNavEnd(linkedCtrls); \r\n      setFirstDistantContent(linked.length > 1);\r\n    }\r\n    easeIn(threadBlocks, 150)\r\n}\r\n}\r\n\r\nfunction updateThreadBlocks(state) {\r\n  ready = 0\r\n  spinner.startSpin()\r\n\r\n  easeOut(threadBlocks, 150, function(){\r\n    spinElm.style.display = 'block'\r\n\r\n    var newThreadData = resolveThreadData(state);\r\n    resetDistantLinks(newThreadData);\r\n  \r\n    var newContent = threadContent(newThreadData, false);\r\n    var newDescrpTxt = threadTextElm(newThreadData, [\"description\"]);\r\n    descrpElm.firstChild.replaceWith(newDescrpTxt)\r\n    contentElm.firstChild.replaceWith(newContent)\r\n  })\r\n}\r\n\r\nfunction descriptionElm(threadData) {\r\n  descrpElm = getElm(\"DIV\", \"nx-thread-description\");\r\n  descrpElm.append(threadTextElm(threadData, [\"description\"]));\r\n  return descrpElm\r\n}\r\n\r\nfunction resolveThreadData(state) {\r\n  var threadData = null;\r\n  if (state.threadId && state.threadId != \"/\") {\r\n    threadData = state.srcData.threads[state.threadIndex];\r\n  }\r\n  return threadData;\r\n}\r\nfunction distantThreadBlock(threadData) {\r\n  setDistantLandmark();\r\n  setDistantSlider();\r\n  resolveLinkedThreads(threadData)\r\n  return blockWrap(\"distant\", null, [slider], distantLandmark);\r\n}\r\n\r\nfunction localThreadBlock(threadData) {\r\n  setContentElm(threadData);\r\n  return blockWrap(\"local\", null, [contentElm], landmarkElm(\"local\"));\r\n}\r\n\r\nfunction setContentElm(threadData) {\r\n  contentElm = getElm(\"DIV\", \"nx-local-content\");\r\n  contentElm.append(threadContent(threadData, false));\r\n}\r\n\r\nfunction showDistantNav(){\r\n  distantNav.style.visibility = 'visible'\r\n}\r\n\r\n\r\nfunction hideDistantNav(){\r\n  distantNav.style.visibility = 'hidden'\r\n}\r\n\r\nfunction resetDistantLinks(threadData){\r\n\r\n  hideDistantNav()\r\n  toggleDistantLandmark(false)\r\n  removeDistantContent(false);\r\n\r\n   linked = [];\r\n   linkedCtrls.position = 0;\r\n   linkedCtrls.count = 0;\r\n  toggleNavEnd(linkedCtrls);\r\n\r\n  resolveLinkedThreads(threadData)\r\n}\r\n\r\nfunction resolveLinkedThreads(threadData){\r\n  if (threadData && threadData.linked.length) {  \r\n    setLinkedItems(threadData);\r\n    } else {\r\n      countReady()\r\n    }\r\n}\r\n\r\nfunction removeDistantContent(transition = false){\r\n  var prevElm = currentElm.firstChild;\r\n  if(prevElm){\r\n    if(transition){\r\n      easeOut(prevElm,150,function(){\r\n        prevElm.remove();\r\n      });\r\n    } else {\r\n      prevElm.remove();\r\n    }\r\n\r\n  }\r\n}\r\n\r\nfunction setFirstDistantContent(showNav = false){\r\n  /*  var callb = function(){\r\n      toggleDistantLandmark(true)\r\n      if(showNav){\r\n        showDistantNav()\r\n      }      \r\n    }\r\n  insertDiversion(currentElm, linked[0], false, true, 200, callb);*/\r\n  toggleDistantLandmark(true)\r\n      if(showNav){\r\n        showDistantNav()\r\n      }      \r\n  currentElm.append(linked[0])\r\n}\r\n\r\nfunction setCurrentLink(){\r\n  if(linked.length){\r\n   var nw = linked[linkedCtrls.position];\r\n\r\n  if(currentElm.firstChild){\r\n      replaceDiversion(currentElm.firstChild, nw)\r\n  } else {\r\n    insertDiversion(currentElm, nw, false, true, 150, callb);\r\n  }\r\n} else {\r\n  removeDistantContent(true);\r\n}\r\n}\r\n\r\nfunction distantNavElm(){\r\n  distantNav = getElm('NAV', 'nx-distant-nav')\r\n  distantNav.append(linkedCtrls.ctrls[\"prev\"].elm, currentElm, linkedCtrls.ctrls[\"next\"].elm)\r\n  hideDistantNav()\r\n  return distantNav\r\n}\r\n\r\nfunction setDistantSlider(){\r\nslider = getElm(\"DIV\");\r\n currentElm = getElm(\"DIV\",\"nx-distant-link\");\r\n setHistoryControls(linkedCtrls, setCurrentLink);\r\n toggleNavEnd(linkedCtrls);\r\n slider.append(distantNavElm(), currentElm);\r\n\r\n}\r\nfunction linkedElm(distantState){\r\n  \r\n  var linkedAuthor = [\r\n    authorIndexLink(distantState, false),\r\n    authorUrl(distantState, false),\r\n    viewLink(distantState, false),\r\n  ];\r\n  var elm = getElm(\"DIV\");\r\n  elm.append(...linkedAuthor);\r\n  return elm;\r\n}\r\n\r\nfunction toggleDistantLandmark(hasLinks){\r\n  var hidden = distantLandmark.style.display === \"none\";\r\n  if(hasLinks && hidden){\r\n    distantLandmark.style.display = 'block'\r\n  }else if(!hasLinks && !hidden){\r\n    distantLandmark.style.display = 'none'\r\n  }\r\n}\r\nfunction setLinkedItems(threadData) {\r\n\r\n    var indexes = [];\r\n    var done = [];\r\n    var promises = [];\r\n    threadData.linked.forEach((url) => {\r\n      if(url){\r\n        var extract = splitUrlAndId(url);\r\n         var prc = resolveState(extract.url, extract.id).then((distantState) => {\r\n            var key = distantState.dataUrl+\"#\"+distantState.threadId;\r\n    \r\n            if(!done.includes(key)){\r\n              done.push(key);\r\n              var elm = linkedElm(distantState);\r\n            if (distantState.threadId == \"/\") {                 \r\n              indexes.push(elm);\r\n            } else {\r\n              elm.append(threadContent(resolveThreadData(distantState), true));\r\n              linked.push(elm);\r\n            }\r\n          }\r\n          }).catch(err => {\r\n            logErr(err.message);\r\n          });\r\n          promises.push(prc);\r\n    }\r\n    });\r\n   Promise.all(promises).then(()=>{\r\n      if(indexes.length){\r\n        linked = linked.concat(indexes);\r\n      }  \r\n      countReady()   \r\n    });\r\n}\r\n\r\nfunction threadContent(threadData, isDistant = false) {\r\n  var dv = getElm(\"DIV\", \"nx-content\");\r\n  if (threadData) {\r\n  var elms = [dateElm(threadData), contentBody(threadData)]\r\n  if (threadData.content.media && threadData.content.media.url) {\r\n    var callb = null\r\n    if(!isDistant){\r\n      callb = countReady\r\n    }\r\n    elms.push(mediaElm(threadData, callb))\r\n  } else if(!isDistant) {\r\n    countReady()\r\n  }\r\n  dv.append(...elms);\r\n}\r\n  return dv;\r\n}\r\n\r\nfunction contentBody(threadData) {\r\n  var bodydiv = getElm(\"DIV\", \"nx-content-body\");\r\n  bodydiv.append(\r\n    threadTextElm(threadData, [\"content\", \"main\"]),\r\n    threadTextElm(threadData, [\"content\", \"aside\"])\r\n  );\r\n  return bodydiv;\r\n}\r\n\r\nfunction dateElm(threadData) {\r\n  var datediv = getElm(\"DIV\", \"nx-content-meta\");\r\n  var rdate = threadTextElm(threadData, [\"content\", \"timestamp\"]);\r\n  datediv.append(rdate);\r\n  return datediv;\r\n}\r\n\r\nfunction threadFieldText(threadData, ref = []) {\r\n  if (threadData) {\r\n    var data = Object.assign({}, threadData);\r\n    for (var r = 0; r < ref.length; r++) {\r\n      data = data[ref[r]];\r\n    }\r\n    if (isNonEmptyStr(data)) {\r\n     \r\n      if(ref.includes(\"timestamp\") && data.includes('T')){\r\ndata = data.replace('T',\" \");\r\n      }else if([\"description\", \"main\", \"aside\", \"caption\"].includes(ref[ref.length-1])){\r\n        data = lines(data)\r\n      }\r\n      return data;\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\nfunction threadHeader(state, threadData){\r\n  var header = getElm('DIV', 'nx-thread-header')\r\n  header.append(threadTitleElm(state, true), descriptionElm(threadData))\r\n  return header\r\n}\r\n\r\nfunction localAndDistantBlocks(threadData){\r\n\r\n  threadBlocks = getElm('DIV', 'nx-thread-blocks')\r\n  threadBlocks.style.display = 'none'\r\n  threadBlocks.append(localThreadBlock(threadData),  distantThreadBlock(threadData))\r\n\r\n  return threadBlocks\r\n}\r\n\r\nexport function threadTextElm(threadData, ref) {\r\n  var dv = getElm(\"DIV\", \"nx-\" + ref.join(\"-\"));\r\n  dv.append(threadFieldText(threadData, ref));\r\n  return dv;\r\n}\r\n\r\nexport function mainThreadBlock(state) {\r\n  var threadData = resolveThreadData(state);\r\n  var mainBlock = getElm('DIV', 'nx-main-block nx-thread')\r\n \r\n  setSpinner()\r\n  spinner.startSpin()\r\n  \r\n  var blocks = [\r\n    threadHeader(state, threadData),\r\n    spinElm, \r\n    localAndDistantBlocks(threadData)\r\n  ];\r\n\r\n  mainBlock.append(...blocks)\r\n\r\nregisterUpdateEvt(function (newState) {\r\n    updateThreadBlocks(newState);\r\n  });\r\n\r\n  return mainBlock;\r\n}\r\n","/*! Nexus | (c) 2021 I-is-as-I-does | AGPLv3 license */\r\n\r\nimport { historyBlock } from \"./NxHistory.js\";\r\nimport { mainIndexBlock } from \"./NxIndex.js\";\r\nimport { appHeader, instanceWrap, serviceWrap\r\n } from \"./NxCommons.js\";\r\nimport { sourceBlock } from \"./NxSource.js\";\r\nimport { mainThreadBlock } from \"./NxThread.js\";\r\n\r\n\r\nexport function viewerElms(seed){\r\n\r\n    return instanceWrap(appHeader(), [serviceWrap\r\n   ([historyBlock(seed.state)], [\r\n    mainIndexBlock(seed.state),\r\n    mainThreadBlock(seed.state)\r\n     ], [sourceBlock(seed.state, seed.styleUrl, seed.editMode)])]);\r\n}"],"names":[],"sourceRoot":""}