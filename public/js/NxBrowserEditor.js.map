{"version":3,"file":"js/NxBrowserEditor.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAC0H;AAU1F;AAOsB;AACqB;AACa;AACxF;AACkF;AACqB;AACxB;AAC1B;AACsC;AACyB;AAC3C;AACA;AACN;AACnE;AACA;AACA,mBAAmB,kEAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wBAAwB;AACpC,YAAY,wBAAwB;AACpC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,cAAc,4DAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4DAAM;AACnB;AACA,kBAAkB,4DAAM;AACxB;AACA;AACA;AACA;AACA;AACA,kBAAkB,4DAAM;AACxB;AACA;AACA;AACA,GAAG;AACH;AACA,kBAAkB,4DAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gEAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iEAAW,8BAA8B,iEAAW,wBAAwB,iEAAW;AACrG;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAM;AAClB;AACA;AACA,mBAAmB,yFAAY;AAC/B;AACA,mCAAmC,yDAAS;AAC5C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6FAAe;AACnB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4DAAM;AACvB;AACA;AACA,EAAE,6FAAe;AACjB;AACA,eAAe,+DAAa;AAC5B,gBAAgB,4DAAM;AACtB;AACA;AACA;AACA;AACA;AACA,QAAQ,qFAAO;AACf;AACA,SAAS;AACT,QAAQ;AACR;AACA,UAAU,6FAAe;AACzB,UAAU;AACV;AACA;AACA,UAAU,oFAAM;AAChB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,aAAa,4DAAM;AACnB;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA,cAAc,4DAAM;AACpB,gBAAgB,wDAAM;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,iBAAiB,iEAAW;AAC5B;AACA;AACA;AACA;AACA,WAAW,4DAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,sEAAiB;AACnB;AACA;AACA;AACA;AACA;AACA,UAAU,oFAAM;AAChB,SAAS;AACT,QAAQ;AACR,QAAQ,qFAAO;AACf;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kEAAY;AAC1B,EAAE,wEAAkB;AACpB;AACA;AACA;AACA;AACA,IAAI,kEAAa;AACjB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAA+D;AAC9E,eAAe,oCAAoC;AACnD,iBAAiB;AACjB;AACA;AACA,oBAAoB,4DAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kEAAY;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAQ,qFAAO;AACf;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,MAAM,oFAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAM;AAClB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,+DAAa;AACvB,IAAI;AACJ,UAAU,2DAAS;AACnB,IAAI;AACJ,UAAU,2DAAS;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2DAAS;AACpB,aAAa,4DAAM;AACnB,cAAc,2DAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wFAAU;AAC9B;AACA;AACA,oBAAoB,uFAAS;AAC7B;AACA;AACA,0BAA0B,sGAAwB;AAClD;AACA;AACA;AACA;AACA,mBAAmB,wFAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4DAAM;AACnB;AACA;AACA;AACA,gBAAgB,iGAAmB;AACnC;AACA,MAAM,oEAAc;AACpB;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAAM;AACrB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,YAAY,4DAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kGAAgB;AACtB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,cAAc,4DAAM;AACpB;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,gBAAgB,6FAAS;AACzB;AACA;AACA;AACA;AACA,kCAAkC;AAClC,iBAAiB,4DAAM;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,YAAY,uDAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,qFAAO;AACjB;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAAM;AACrB;AACA;AACA;AACA,cAAc,uDAAO;AACrB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAM;AAClB;AACA;AACA;AACA;AACA,GAAG;AACH,aAAa,4DAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAM;AAClB;AACA;AACA;AACA,IAAI,yFAAW;AACf,mBAAmB,4FAAc;AACjC;AACA,KAAK;AACL,MAAM,kFAAM;AACZ;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gGAAM;AAClB;AACA;AACA;AACA,IAAI,uFAAS;AACb;AACA,MAAM,uFAAS;AACf,KAAK;AACL;AACA;AACA;AACA,gBAAgB,4DAAM;AACtB;AACA;AACA;AACA,YAAY,4DAAM;AAClB;AACA;AACA;AACA;AACA;AACA,cAAc,4DAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAM;AAClB,EAAE,wEAAkB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6FAAe;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAM;AACjB,YAAY,iEAAW;AACvB;AACA;AACA;AACA,WAAW,4DAAM;AACjB,YAAY,iEAAW;AACvB;AACA;AACA;AACA;AACA;AACA,cAAc,4DAAM;AACpB,cAAc,4DAAM;AACpB,gBAAgB,4DAAM;AACtB;AACA;AACA;AACA;AACA,YAAY,4DAAM;AAClB;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP,gBAAgB,4DAAM;AACtB;AACA;AACA;AACA;AACA;AACA,MAAM,8FAAgB;AACtB,MAAM;AACN,MAAM,kEAAa;AACnB;AACA;AACA,MAAM,8FAAgB;AACtB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK,wFAAQ;AACb,WAAW,uDAAO;AAClB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS,mGAAiB;AAC1B;AACA;AACA;AACA,MAAM;AACN,aAAa,uDAAO;AACpB;AACA,EAAE,kGAAgB;AAClB;AACA;AACA;AACA;AACA,iBAAiB,4FAAc;AAC/B;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wDAAQ;AACrB;AACA;AACA;AACA;AACA;AACO;AACP;AACA,SAAS,+DAAS;AAClB;AACO;AACP,SAAS,+DAAS;AAClB;AACO;AACP,SAAS,+DAAS;AAClB;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC9+BA;AACkF;AACU;AAC5C;AAChD;AACA,EAAS;AACT,cAAc,4DAAM;AACpB;AACA;AACA;AACA;AACA;AACA,EAAS;AACT,cAAc,4DAAM;AACpB;AACA;AACA;AACA,EAAU;AACV,cAAc,4DAAM;AACpB;AACA;AACA;AACA;AACA;AACA,EAAS;AACT,aAAa,4DAAM;AACnB;AACA,gBAAgB,4DAAM;AACtB,wBAAwB,gGAAM;AAC9B,EAAE,0GAAiB;AACnB;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,4DAAM;AAClB;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,4DAAM;AAClB;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,4DAAM;AACjB;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACrDA;AAC8F;AACJ;AAClC;AACsB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,8FAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,EAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC/DA;AAC8F;AAC3C;AACuE;AAC1H;AACO;AACP;AACA,IAAI,wDAAY;AAChB;AACA,qBAAqB,+DAAU;AAC/B;AACA,mBAAmB,4DAAM;AACzB,oBAAoB,0DAAc;AAClC,oBAAoB,4DAAM;AAC1B,qBAAqB,0DAAc,GAAG,4DAAgB;AACtD;AACA,kBAAkB,kEAAY,CAAC,uEAAiB,IAAI,iEAAW;AAC/D,IAAI,uDAAW;AACf;AACA;AACA;AACA;AACA,iBAAiB,4DAAM;AACvB,4BAA4B,0DAAc;AAC1C;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3BA;AACsF;AACZ;AAC1E;AACA;AACO;AACP;AACA,mBAAmB,yFAAY;AAC/B,gBAAgB,SAAS,oFAAM;AAC/B;AACA,iCAAiC,sFAAS;AAC1C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA","sources":["webpack://nexus/./src/editor/NxEdit.js","webpack://nexus/./src/editor/NxEditComps.js","webpack://nexus/./src/editor/NxEditPrc.js","webpack://nexus/./src/editor/NxEditor.js","webpack://nexus/./src/editor/NxStarters.js"],"sourcesContent":["/*! Nexus | (c) 2021 I-is-as-I-does | AGPLv3 license */\r\nimport { charMinMax, idPattern, supportedMediaTypes, urlPattern } from \"@i-is-as-i-does/nexus-core/src/validt/NxSpecs.js\";\r\nimport {\r\n  landmarkElm,\r\n  baseViewLink,\r\n  blockWrap,\r\n  getElm,\r\n  selectDropDown,\r\n  setHistoryControls,\r\n  setToggleOnDisplay,\r\n  toggleNavEnd\r\n} from \"../viewer/NxCommons.js\";\r\nimport {\r\n  easeIn,\r\n  easeOut,\r\n  insertDiversion,\r\n  replaceDiversion,\r\n  splitFlap,\r\n} from \"@i-is-as-i-does/valva/src/legacy/Valva-v1.js\";\r\nimport { randomString } from \"@i-is-as-i-does/jack-js/src/modules/Help.js\";\r\nimport { getBuffertime, registerUpdateEvt, triggerUpdate } from \"../browser/NxState.js\";\r\n\r\nimport { getTxt } from \"@i-is-as-i-does/nexus-core/src/transl/NxCoreTranslate.js\";\r\nimport { getStoredEditData, registerEditData } from \"@i-is-as-i-does/nexus-core/src/storg/NxMemory.js\";\r\nimport { validData } from \"@i-is-as-i-does/nexus-core/src/validt/NxStamper.js\";\r\nimport { newData, newThread } from \"./NxStarters.js\";\r\nimport { getThreadsList, loadSrcFile } from \"@i-is-as-i-does/nexus-core/src/load/NxSrc.js\";\r\nimport { dateInput, baseLabel, textareaInput, textInput, invalidSp, deleteLinkBtn, addBtn } from \"./NxEditComps.js\";\r\nimport { convertToId, newState, resolveMediaType } from \"./NxEditPrc.js\";\r\nimport { getQuery } from \"@i-is-as-i-does/nexus-core/src/base/NxHost.js\";\r\nimport { logErr } from \"@i-is-as-i-does/nexus-core/src/logs/NxLog\";\r\n\r\nvar hostElm\r\nconst editBuffer = getBuffertime();\r\nconst editHistoryMax = 10;\r\nvar editMenu\r\nvar editState = {\r\n  dataUrl: \"nexus-tmp\",\r\n  srcData: null,\r\n  threadId: \"/\",\r\n  threadIndex: -1,\r\n};\r\nvar originData = null;\r\n\r\n\r\nvar upDownEvent = new CustomEvent(\"IndexChange\");\r\nvar prcRunning = false;\r\nvar actCtrls = {\r\n  ctrls: {\r\n    prev: { symbol: \"↶\", elm: null },\r\n    next: { symbol: \"↷\", elm: null },\r\n  },\r\n  position: 0,\r\n  count: 1,\r\n};\r\nvar lastAction = [];\r\nvar editIndex = null;\r\nvar editLocal = null;\r\nvar editDistant = null;\r\nvar authorForm;\r\nvar btnSymbols = {\r\n  up: \"↑\",\r\n  down: \"↓\",\r\n};\r\nvar saveBtn, resetBtn;\r\nvar actionFdbck;\r\nvar authorInputs = {\r\n  \"handle\": null,\r\n  \"url\": null,\r\n  \"about\": null\r\n};\r\nvar feedbackrun = null;\r\nvar instanceBtn;\r\n\r\n\r\nfunction moveItem(from, to) {\r\n  editState.srcData.index.splice(\r\n    to,\r\n    0,\r\n    editState.srcData.index.splice(from, 1)[0]\r\n  );\r\n  editState.srcData.threads.splice(\r\n    to,\r\n    0,\r\n    editState.srcData.threads.splice(from, 1)[0]\r\n  );\r\n\r\n}\r\n\r\nfunction toggleActiveBtn(id, btn) {\r\n  var idx = editState.srcData.index.indexOf(id);\r\n\r\n  if (idx == 0) {\r\n    btn[\"up\"].disabled = true;\r\n  } else {\r\n    btn[\"up\"].disabled = false;\r\n  }\r\n  if (idx + 1 == editState.srcData.index.length) {\r\n    btn[\"down\"].disabled = true;\r\n  } else {\r\n    btn[\"down\"].disabled = false;\r\n  }\r\n}\r\nfunction permuteThread(goingUp, goingDown) {\r\n  editIndex.removeChild(goingUp);\r\n  editIndex.insertBefore(goingUp, goingDown);\r\n  goingDown.dispatchEvent(upDownEvent);\r\n  goingUp.dispatchEvent(upDownEvent);\r\n}\r\n\r\nfunction moveItemHandler(li, it, id) {\r\n  var act = function (redo) {\r\n    var idx = editState.srcData.index.indexOf(id);\r\n    var isUp = it == \"up\";\r\n    if (!redo) {\r\n      isUp = !isUp;\r\n    }\r\n    if (isUp && idx != 0) {\r\n      moveItem(idx, idx - 1);\r\n      permuteThread(li, li.previousSibling);\r\n    } else if (!isUp && idx + 1 != editState.srcData.index.length) {\r\n      moveItem(idx, idx + 1);\r\n      permuteThread(li.nextSibling, li);\r\n    }\r\n\r\n  };\r\n\r\n  setLastAction(act);\r\n  act(true);\r\n}\r\nfunction setMoveBtns(li, id) {\r\n  var dv = getElm(\"DIV\", \"nx-edit-move\");\r\n  var btn = {\r\n    up: null,\r\n    down: null,\r\n  };\r\n  li.addEventListener(\"IndexChange\", function () {\r\n    toggleActiveBtn(id, btn);\r\n  });\r\n  Object.keys(btn).forEach((it) => {\r\n    btn[it] = getElm(\"BUTTON\", \"nx-edit-move-\" + it);\r\n    btn[it].type = \"button\";\r\n    btn[it].textContent = btnSymbols[it];\r\n    dv.append(btn[it]);\r\n\r\n    btn[it].addEventListener(\"click\", function () {\r\n      moveItemHandler(li, it, id);\r\n    });\r\n  });\r\n  toggleActiveBtn(id, btn);\r\n  li.append(dv);\r\n}\r\n\r\n\r\nfunction threadLocalForm(idx, titleCallback) {\r\n  var form = getElm(\"FORM\", \"nx-thread-local-form\");\r\n\r\n  var fieldset1 = getElm('FIELDSET');\r\n\r\n  fieldset1.append(inputElm([\"threads\", idx, \"title\"], titleCallback));\r\n  fieldset1.append(inputElm([\"threads\", idx, \"description\"]));\r\n\r\n\r\n  var fieldset2 = getElm('FIELDSET');\r\n\r\n  [\"timestamp\", \"main\", \"aside\"].forEach((field) => {\r\n    fieldset2.append(inputElm([\"threads\", idx, \"content\", field]));\r\n  });\r\n\r\n  var fieldset3 = getElm('FIELDSET');\r\n \r\n\r\nvar typeInp = inputElm([\"threads\", idx, \"content\", \"media\", \"type\"]);\r\n  var tcallback = function (val, valid) {\r\n    if (valid) {\r\n      var item = typeInp.querySelector(\r\n        \"[data-item=\" + resolveMediaType(val) + \"]\"\r\n      );\r\n      if (item) {\r\n        item.click();\r\n      }\r\n    }\r\n  };\r\n  fieldset3.append(inputElm([\"threads\", idx, \"content\", \"media\", \"url\"], tcallback));\r\n  fieldset3.append(typeInp);\r\n  fieldset3.append(inputElm([\"threads\", idx, \"content\", \"media\", \"caption\"]));\r\n\r\n  form.append(landmarkElm(\"local thread\"), fieldset1 , landmarkElm(\"content\"), fieldset2, landmarkElm(\"media\",2), fieldset3);\r\n  return form;\r\n}\r\n\r\n\r\nfunction addThreadBtn() {\r\n  var btn = addBtn();\r\n  btn.addEventListener('click', function () {\r\n   \r\n    var randomId = randomString(10);\r\n    var idx = editState.srcData.index.length;\r\n    editState.srcData.threads.push(newThread(randomId));\r\n    editState.srcData.index.push(randomId);\r\n    var map = threadElms(idx, randomId);\r\n\r\n    ['local', 'distant'].forEach(k => {\r\n      map[k].parent.append(map[k].child);\r\n    });\r\n\r\n    var callb = null;\r\n    if (editIndex.childNodes.length) {\r\n      callb = function () {\r\n        editIndex.childNodes[idx - 1].dispatchEvent(upDownEvent);\r\n      };\r\n    }\r\n    insertDiversion(map.index.parent, map.index.child, false, true, 200, callb);\r\n    saveBtn.disabled = false;\r\n\r\n  });\r\n\r\n  return btn;\r\n}\r\n\r\n\r\nfunction appendLinkInputs(form, idx, i) {\r\n  var linkwrap = getElm(\"DIV\", \"nx-edit-distant-link\");\r\n  var elm = inputElm([\"threads\", idx, \"linked\", i]);\r\n\r\n  insertDiversion(linkwrap,elm,false,true,200);\r\n\r\n  var dltBtn = deleteLinkBtn();\r\n  var delwrap = getElm('DIV', 'nx-distant-link-action');\r\n  delwrap.append(dltBtn);\r\n  linkwrap.append(delwrap);\r\n  dltBtn.addEventListener(\"click\", () => {\r\n    var act = function (redo) {\r\n      if (redo) {\r\n        easeOut(linkwrap, 200, function () {\r\n          linkwrap.remove();\r\n        });\r\n      } else {\r\n        if (i === editState.srcData.threads[idx].linked.length - 1) {\r\n          insertDiversion(form, linkwrap, false, true, 200);\r\n        } else {\r\n          var nextSibling = form.childNodes[i];\r\n          form.insertBefore(linkwrap, nextSibling);\r\n          easeIn(linkwrap, 200);\r\n        }\r\n      }\r\n    };\r\n    setLastAction(act);\r\n    act(true);\r\n  });\r\n  form.append(linkwrap);\r\n}\r\n\r\nfunction threadDistantForm(idx, id) {\r\n  var form = getElm(\"FORM\", \"nx-thread-distant-form\");\r\n\r\n  var linked = editState.srcData.threads[idx].linked;\r\n\r\nif (linked.length) {\r\n  for (var i = 0; i < linked.length; i++) {\r\n  //  appendLinkInputs(form, idx, i);\r\n  }\r\n}\r\nvar formCnt = getElm(\"DIV\");\r\nvar addBtnElm = addBtn();\r\naddBtnElm.addEventListener(\"click\", () => {\r\n  var idx = editState.srcData.index.indexOf(id);\r\n  var i = editState.srcData.threads[idx].linked.length;\r\n  editState.srcData.threads[idx].linked.push(\"https://\");\r\n  appendLinkInputs(form, idx, i);\r\n});\r\n\r\n  formCnt.append(landmarkElm(\"linked threads\"),form, addBtnElm);\r\n  return formCnt;\r\n}\r\n\r\nfunction threadLi(id, form) {\r\n  var li = getElm(\"LI\");\r\n\r\n  li.append(form);\r\n\r\n  if (editState.threadId != id) {\r\n    li.style.display = \"none\";\r\n  }\r\n  registerUpdateEvt(function (nState) {\r\n\r\n    if (nState.dataUrl == editState.dataUrl) {\r\n      editState = nState;\r\n      if (nState.threadId == id) {\r\n        setTimeout(function () {\r\n          easeIn(li, 200);\r\n        }, 200);\r\n      } else {\r\n        easeOut(li, 200);\r\n      }\r\n    }\r\n  });\r\n  return li;\r\n}\r\n\r\n\r\nfunction stateUpdate(idx, id) {\r\n  var newState = Object.assign({}, editState);\r\n  newState.threadId = id;\r\n  newState.threadIndex = idx;\r\n\r\n  return newState;\r\n}\r\n\r\nfunction indexLink(idx, id) {\r\n\r\n  var itemState = stateUpdate(idx, id);\r\n  var indLk = baseViewLink(itemState, false);\r\n  setToggleOnDisplay(indLk, itemState);\r\n\r\n  indLk.addEventListener(\"click\", () => {\r\n    var nidx = editState.srcData.index.indexOf(id);\r\n\r\n    triggerUpdate(stateUpdate(nidx, id), true);\r\n  });\r\n\r\n  return indLk;\r\n}\r\n\r\n\r\nfunction threadElms(idx, id) {\r\n  var map = {\r\n    'index': { \"parent\": editIndex, \"child\": null, \"link\": null, \"del\": null },\r\n    'local': { \"parent\": editLocal, \"child\": null },\r\n    'distant': { \"parent\": editDistant, \"child\": null }\r\n  };\r\n\r\n  map.index.child = getElm(\"LI\");\r\n  map.index.link = indexLink(idx, id);\r\n  map.index.child.append(map.index.link);\r\n  setMoveBtns(map.index.child, id);\r\n\r\n  var titleCallback = function (val, valid) {\r\n    if (valid) {\r\n      var newId = convertToId(val);\r\n      map.index.link.firstChild.textContent = newId;\r\n      setNewValue([\"threads\", idx, \"id\"], newId);\r\n    }\r\n\r\n  };\r\n  map.distant.child = threadLi(id, threadDistantForm(idx, id));\r\n  map.local.child = threadLi(id, threadLocalForm(idx, titleCallback));\r\n\r\n  map.index.del = deleteThreadElm(map.local.child, map.distant.child, id);\r\n  map.index.child.append(map.index.del);\r\n\r\n  return map;\r\n}\r\n\r\n\r\nfunction setLastAction(callback) {\r\n  if (actCtrls.position != actCtrls.count - 1) {\r\n    lastAction.splice(actCtrls.position);\r\n    actCtrls.count = lastAction.length + 1;\r\n  }\r\n  if (actCtrls.count === editHistoryMax) {\r\n    lastAction.splice(0, 1);\r\n  } else {\r\n    actCtrls.count++;\r\n  }\r\n\r\n  lastAction.push(callback);\r\n  actCtrls.position = actCtrls.count - 1;\r\n\r\n  toggleNavEnd(actCtrls);\r\n  saveBtn.disabled = false;\r\n}\r\n\r\n\r\nfunction deleteEvent(localLi, distantLi, id) {\r\n  var idx = editState.srcData.index.indexOf(id);\r\n  var indexNode = editIndex.childNodes[idx];\r\n  var len = editState.srcData.index.length;\r\n  var map = {\r\n    index: id,\r\n    threads: editState.srcData.threads[idx],\r\n  };\r\n\r\n  var act = function (redo) {\r\n\r\n    if (redo) {\r\n\r\n      Object.keys(map).forEach((field) => {\r\n        editState.srcData[field].splice(idx, 1);\r\n      });\r\n\r\n      editState.threadId = '/';\r\n      editState.threadIndex = -1;\r\n\r\n      [distantLi, localLi, indexNode].forEach((elm) => {\r\n        easeOut(elm, 200, function () {\r\n          elm.remove();\r\n        });\r\n      });\r\n      if (len > 1) {\r\n        if (idx === 0) {\r\n          indexNode.nextSibling.dispatchEvent(upDownEvent);\r\n        } else if (idx === len - 1) {\r\n          indexNode.previousSibling.dispatchEvent(upDownEvent);\r\n        }\r\n      }\r\n    } else {\r\n\r\n      Object.keys(map).forEach((field) => {\r\n        editState.srcData[field].splice(idx, 0, map[field]);\r\n      });\r\n\r\n      if (idx < len - 1) {\r\n        var next = editIndex.childNodes[idx];\r\n        editIndex.insertBefore(indexNode, next);\r\n        if (idx === 0) {\r\n          next.dispatchEvent(upDownEvent);\r\n        }\r\n      } else {\r\n        editIndex.append(indexNode);\r\n        if (len > 1) {\r\n          indexNode.previousSibling.dispatchEvent(upDownEvent);\r\n        }\r\n      }\r\n      easeIn(indexNode, 200);\r\n      editLocal.append(localLi);\r\n      editDistant.append(distantLi);\r\n      indexNode.firstChild.click();\r\n    }\r\n  };\r\n  setLastAction(act);\r\n  act(true);\r\n}\r\n\r\nfunction deleteThreadElm(localLi, distantLi, id) {\r\n  var btn = getElm(\"BUTTON\", \"nx-delete-thread\");\r\n  btn.type = \"button\";\r\n  btn.textContent = \"-\";\r\n\r\n  btn.addEventListener(\"click\", function () {\r\n    deleteEvent(localLi, distantLi, id);\r\n  });\r\n  return btn;\r\n}\r\n\r\nfunction setAuthorValue(ref, value) {\r\n  if (!editState.srcData.author) {\r\n    editState.srcData.author = {};\r\n  }\r\n  editState.srcData.author[ref[1]] = value;\r\n  return;\r\n}\r\n\r\nfunction setThreadIndex(ref) {\r\n  if (!editState.srcData.threads) {\r\n    editState.srcData.threads = [];\r\n  } else if (typeof editState.srcData.threads[ref[1]] === \"undefined\") {\r\n    editState.srcData.threads[ref[1]] = {};\r\n  }\r\n}\r\n\r\nfunction setThreadInfo(ref, value) {\r\n  editState.srcData.threads[ref[1]][ref[2]] = value;\r\n}\r\n\r\nfunction setContentValue(ref, value) {\r\n  if (!editState.srcData.threads[ref[1]].content) {\r\n    editState.srcData.threads[ref[1]].content = {};\r\n  }\r\n  if (ref[3] != \"media\") {\r\n    editState.srcData.threads[ref[1]].content[ref[3]] = value;\r\n    return;\r\n  }\r\n  if (!editState.srcData.threads[ref[1]].content.media) {\r\n    editState.srcData.threads[ref[1]].content.media = {};\r\n  }\r\n  editState.srcData.threads[ref[1]].content.media[ref[4]] = value;\r\n  return;\r\n}\r\n\r\nfunction setLinkedValue(ref, value) {\r\n  if (!editState.srcData.threads[ref[1]].linked) {\r\n    editState.srcData.threads[ref[1]].linked = [];\r\n  } else if (\r\n    editState.srcData.threads[ref[1]].linked.indexOf(ref[3]) === -1\r\n  ) {\r\n    editState.srcData.threads[ref[1]].linked.push(value)\r\n  } else {\r\n    editState.srcData.threads[ref[1]].linked[ref[3]] = value;\r\n  }\r\n  }\r\n \r\n\r\nfunction setNewValue(ref, value) {\r\n\r\n  if (editState.srcData === null) {\r\n    editState.srcData = {};\r\n  }\r\n  if (ref[0] == \"author\") {\r\n    return setAuthorValue(ref, value);\r\n  }\r\n  setThreadIndex(ref);\r\n\r\n  if (![\"linked\", \"content\"].includes(ref[2])) {\r\n    return setThreadInfo(ref, value);\r\n  }\r\n\r\n  if (ref[2] == \"content\") {\r\n    setContentValue(ref, value);\r\n  }\r\n  setLinkedValue(ref, value);\r\n}\r\n\r\nfunction fieldValue(ref) {\r\n  if (editState.srcData) {\r\n    if (ref[0] == \"author\") {\r\n      return editState.srcData[ref[0]][ref[1]];\r\n    }\r\n\r\n    if (![\"linked\", \"content\"].includes(ref[2])) {\r\n      return editState.srcData.threads[ref[1]][ref[2]];\r\n    }\r\n    if (ref[2] == \"content\") {\r\n      if (ref[3] != \"media\") {\r\n        return editState.srcData.threads[ref[1]].content[ref[3]];\r\n      }\r\n      return editState.srcData.threads[ref[1]].content.media[ref[4]];\r\n    }\r\n    return editState.srcData.threads[ref[1]].linked[ref[3]];\r\n  }\r\n  return \"\";\r\n}\r\n\r\n\r\n\r\nfunction inputElm(ref, callback = null, store = null) {\r\n  var val = fieldValue(ref);\r\n\r\n  var pos = ref.length - 1\r\n  if (Number.isInteger(ref[pos])) {\r\n    pos--\r\n  }\r\n  var field = ref[pos];\r\n\r\n  var inp;\r\n  if ([\"about\", \"description\", \"main\", \"aside\", \"caption\"].includes(field)) {\r\n    inp = textareaInput(val);\r\n  } else if (field == \"timestamp\") {\r\n    inp = dateInput(val);\r\n  } else {\r\n    inp = textInput(val);\r\n  }\r\n\r\n  var hook = ref.join(\"-\");\r\n  inp.id = hook;\r\n  inp.name = hook;\r\n  if (\r\n    [\"handle\", \"title\", \"main\", \"id\", \"url\", \"type\", \"timestamp\", \"linked\"].includes(field)\r\n  ) {\r\n    inp.required = true;\r\n  }\r\n  var ident = field\r\n  if(field === 'linked'){\r\n    ident = 'url'\r\n  }\r\n\r\n  var lb = baseLabel(ident);\r\n  var indc = getElm(\"SPAN\", \"nx-edit-indication\");\r\n  var fdbck = invalidSp();\r\n  lb.append(indc, fdbck);\r\n\r\n\r\n  switch (ident) {\r\n    case \"url\":\r\n      indc.textContent = \"[http]\";\r\n      inp.pattern = urlPattern;\r\n      break;\r\n    case \"id\":\r\n      inp.pattern = idPattern;\r\n      break;\r\n    case \"type\":\r\n      inp.pattern = \"(\" + supportedMediaTypes.join(\"|\") + \")\";\r\n      break;\r\n    case \"timestamp\":\r\n      break;\r\n    default:\r\n      var minmax = charMinMax[field];\r\n      indc.textContent = \"[\" + minmax[0] + \"-\" + minmax[1] + \"]\";\r\n      inp.setAttribute(\"maxlength\", minmax[1]);\r\n      inp.setAttribute(\"minlength\", minmax[0]);\r\n  }\r\n\r\n  if (store) {\r\n    store[field] = inp;\r\n  }\r\n\r\n  var wrap = getElm(\"DIV\", \"nx-edit-input nx-edit-select-\" + field);\r\n  wrap.append(lb);\r\n  if (field === \"type\") {\r\n// || field === \"linked\"\r\n    var items = supportedMediaTypes;\r\n    wrap.append(\r\n      selectDropDown(items, inp, null, \"nx-edit-\" + ref[2] + \"-\" + field)\r\n    );\r\n  } else {\r\n    wrap.append(inp);\r\n  }\r\n\r\n  setInputEvt(ref, inp, fdbck, callback);\r\n  inputEvtHandler(ref, inp, fdbck, callback);\r\n\r\n  return wrap;\r\n}\r\n\r\nfunction inputEvtHandler(ref, inp, fdbck, callback) {\r\n  var valid = false;\r\n\r\n  if (inp.checkValidity()) {\r\n    valid = true;\r\n    setNewValue(ref, inp.value);\r\n    fdbck.textContent = \"✓\";\r\n  } else {\r\n    fdbck.textContent = \"✗\";\r\n  }\r\n  if (typeof callback === \"function\") {\r\n    callback(inp.value, valid);\r\n  }\r\n}\r\n\r\nfunction setInputEvt(ref, inp, fdbck, callback) {\r\n  var undone = \"\";\r\n  var prev = inp.value;\r\n  inp.addEventListener(\"focus\", function () {\r\n    prev = inp.value;\r\n  });\r\n  inp.addEventListener(\"change\", function () {\r\n    inputEvtHandler(ref, inp, fdbck, callback);\r\n    var act = function (redo) {\r\n      if (redo) {\r\n        inp.value = undone;\r\n      } else {\r\n        undone = inp.value;\r\n        inp.value = prev;\r\n      }\r\n      inputEvtHandler(ref, inp, fdbck, callback);\r\n    };\r\n    setLastAction(act);\r\n  });\r\n}\r\n\r\nfunction triggerUndoRedo(ctrl) {\r\n  if (!prcRunning) {\r\n    var postn = actCtrls.position;\r\n    var redo = false;\r\n    if (ctrl == \"next\") {\r\n      postn -= 1;\r\n      redo = true;\r\n    }\r\n\r\n    lastAction[postn](redo);\r\n    setTimeout(\r\n      function () {\r\n        prcRunning = false;\r\n      }.bind(this),\r\n      editBuffer\r\n    );\r\n    saveBtn.disabled = false;\r\n  }\r\n}\r\n\r\nfunction setAuthorForm() {\r\n  authorForm = getElm(\"FORM\", \"nx-edit-author\");\r\n  [\"handle\", \"url\", \"about\"].forEach((field) => {\r\n    authorForm.append(inputElm([\"author\", field], null, authorInputs));\r\n  });\r\n}\r\n\r\nfunction setSaveBtn() {\r\n  saveBtn = getElm('BUTTON', 'nx-save');\r\n  saveBtn.type = \"button\";\r\n  saveBtn.textContent = \"🖫\";\r\n  saveBtn.disabled = true;\r\n  saveBtn.addEventListener('click', function () {\r\n    if (!saveBtn.disabled) {\r\n      \r\n      registerEditData(editState.dataUrl, editState.srcData);    \r\n      displayFeedback(\"saved\");\r\n      saveBtn.disabled = true;\r\n      setResetStatus();\r\n    }\r\n  });\r\n\r\n}\r\n\r\nfunction setResetStatus(){\r\n  var disb = true;\r\n\r\n  if(originData != JSON.stringify(editState.srcData)){\r\n    disb = false;\r\n  } \r\n  if(resetBtn.disabled !== disb){\r\n    resetBtn.disabled = disb;\r\n  }\r\n\r\n}\r\n\r\nfunction setResetBtn(){\r\nresetBtn = getElm('BUTTON', 'nx-reset');\r\n  resetBtn.type = \"button\";\r\n  resetBtn.textContent = \"⭯\";\r\n\r\n  setResetStatus();\r\n  resetBtn.addEventListener('click', function () {\r\n\r\n    if(!resetBtn.disabled){\r\n\r\n      resetData(JSON.parse(originData));\r\n      resetBtn.disabled = true;\r\n\r\n    }\r\n   \r\n  });\r\n\r\n}\r\n\r\nfunction downloadBtn() {\r\n  var dlBtn = getElm('BUTTON', 'nx-download');\r\n  dlBtn.type = \"button\";\r\n  dlBtn.textContent = \"⇣\";\r\n  dlBtn.addEventListener('click', function (e) {\r\n    var data = Object.assign({}, editState.srcData);\r\n    delete data.index;\r\n    var check = validData(data);\r\n    if (!check) {\r\n      displayFeedback('Invalid Nexus data');\r\n    }\r\n    data = JSON.stringify(data, undefined, 2);\r\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(data);\r\n    var anchor = getElm('A');\r\n    anchor.setAttribute(\"href\", dataStr);\r\n    anchor.setAttribute(\"download\", \"nexus.json\");\r\n    hostElm.appendChild(anchor);\r\n    anchor.click();\r\n    anchor.remove();\r\n  });\r\n  return dlBtn;\r\n}\r\n\r\nfunction resetAuthorForm() {\r\n  for (let [field, input] of Object.entries(authorInputs)) {\r\n    input.value = editState.srcData.author[field];\r\n  }\r\n}\r\n\r\nfunction resetData(nData) {\r\n  var prevData = Object.assign({}, editState.srcData);\r\n\r\n  if(nData === null){\r\n    nData = newData();\r\n  }\r\n\r\n  var act = function (redo) {\r\n\r\n    if (editState.srcData.threads.length) {\r\n    [editIndex, editLocal, editDistant].forEach(parent => {\r\n        Array.from(parent.childNodes).forEach(child => {\r\n          easeOut(child, 150,function () {\r\n            child.remove();\r\n          })\r\n        })\r\n      });\r\n    }\r\n\r\n    if (redo) {\r\n      editState.srcData = nData;\r\n    } else {\r\n      editState.srcData = prevData;\r\n    }\r\n    \r\n    editState.threadIndex = 0;\r\n    editState.threadId =editState.srcData.threads[0].id;\r\n\r\n    resetAuthorForm();\r\n    setThreads(true);\r\n\r\n  };\r\n\r\n  setLastAction(act);\r\n  act(true);\r\n\r\n}\r\n\r\nfunction newDocumenBtn() {\r\n  var newBtn = getElm('BUTTON', 'nx-new');\r\n  newBtn.type = \"button\";\r\n  newBtn.textContent = \"🗋\";\r\n  newBtn.addEventListener('click', function () {\r\n    resetData(newData());\r\n  });\r\n  return newBtn;\r\n}\r\n\r\nfunction openBtn() {\r\n  var inp = fileInput();\r\n  var btn = getElm('BUTTON', 'nx-open-file');\r\n  btn.type = 'button';\r\n  btn.textContent = \"🗁\";\r\n  btn.addEventListener('click', function () {\r\n    inp.click();\r\n  });\r\n  var wrap = getElm('SPAN');\r\n  wrap.append(inp, btn);\r\n  return wrap;\r\n}\r\n\r\n\r\nfunction fileInput(){\r\n  var inp = getElm('INPUT');\r\n  inp.type = \"file\";\r\n  inp.accept = \"application/json\";\r\n  inp.addEventListener('change', function (evt) {\r\n    loadSrcFile(evt).then(data => {\r\n      data.index = getThreadsList(data)\r\n     resetData(data);\r\n    }).catch((err) => {\r\n      logErr(err.message)\r\n      displayFeedback('Invalid source');\r\n    })\r\n  });\r\n  inp.style.display = 'none';\r\nreturn inp;\r\n}\r\n\r\n\r\nfunction displayFeedback(msg) {\r\n  var txt = getTxt(msg);\r\nif(feedbackrun){\r\n  clearTimeout(feedbackrun);\r\n}\r\n    splitFlap(actionFdbck, txt, 25);\r\n    feedbackrun = setTimeout(function () {\r\n      splitFlap(actionFdbck, \"\",25);\r\n    }, 2000 + (txt.length * 20));\r\n}\r\n\r\nfunction setActionFeedback() {\r\n  actionFdbck = getElm('SPAN', 'nx-action-feedback');\r\n}\r\n\r\nfunction editNav() {\r\n  var wrp = getElm(\"DIV\", \"nx-edit-nav\");\r\n  setActionFeedback();\r\n  setResetBtn();\r\n  setSaveBtn();\r\n\r\n\r\n  var links = getElm('DIV');\r\n\r\n\r\n  links.append(resetBtn, newDocumenBtn(), openBtn(),saveBtn, downloadBtn());\r\n  wrp.append(actionFdbck, links);\r\n  return wrp;\r\n}\r\nfunction editActions() {\r\n  var wrp = getElm(\"DIV\", \"nx-edit-actions nx-history-nav\");\r\n  setHistoryControls(actCtrls, triggerUndoRedo);\r\n  wrp.append(actCtrls.ctrls[\"prev\"].elm, actCtrls.ctrls[\"next\"].elm);\r\n  return wrp;\r\n}\r\n\r\nfunction setThreads(ease =false) {\r\n\r\n  var items = editState.srcData.index;\r\n\r\n  if (items.length) {\r\n    for (var i = 0; i < items.length; i++) {\r\n      setThread(i, items[i], ease);\r\n    }\r\n  }\r\n}\r\n\r\nfunction setThread(idx, id,ease = false) {\r\n  var map = threadElms(idx, id);\r\n    for(let [k, elmSet] of Object.entries(map)){\r\n      if(ease  && (k == \"index\" ||  id == editState.threadId)){\r\n\r\n        insertDiversion(elmSet.parent, elmSet.child,false, true,200);\r\n            }else {\r\n              elmSet.parent.append(elmSet.child);\r\n            }\r\n           \r\n    }\r\n}\r\n\r\nfunction authorPart(){\r\n  setAuthorForm();\r\n  var dv = getElm('DIV', \"nx-edit-author-form\");\r\n  dv.append(landmarkElm(\"author\"), authorForm);\r\n  return dv;\r\n}\r\nfunction indexPart(){\r\n  var dv = getElm('DIV', \"nx-edit-list\");\r\n  dv.append(landmarkElm(\"threads\"), editIndex, addThreadBtn());\r\n  return dv;\r\n}\r\n\r\nfunction setThreadsForms() {\r\n  \r\n  editIndex = getElm(\"UL\", \"nx-edit-index\");\r\n  editLocal = getElm(\"UL\", \"nx-edit-local\");\r\n  editDistant = getElm(\"UL\", \"nx-edit-distant\");\r\n  setThreads();\r\n\r\n}\r\nfunction setEditMenu() {\r\n  editMenu= getElm(\"DIV\", \"nx-edit-menu\");\r\n\r\n  editMenu.append(editNav(), editActions());\r\n  \r\n}\r\n\r\nexport function getEditMenu(){\r\n  return editMenu\r\n}\r\n\r\nexport function instanceSwitch(viewerInst, editInst) {\r\n  instanceBtn = getElm(\"BUTTON\", \"nx-edit-switch\");\r\n  instanceBtn.textContent = \"👁\";\r\n\r\n  instanceBtn.addEventListener('click', function () {\r\n    if (instanceBtn.textContent == \"✎\") {\r\n      instanceBtn.textContent = \"👁\";\r\n      replaceDiversion(viewerInst, editInst);\r\n    } else {\r\n      triggerUpdate(editState, true, true);\r\n\r\n      instanceBtn.textContent = \"✎\";\r\n      replaceDiversion(editInst, viewerInst);\r\n    }\r\n\r\n  });\r\n\r\n  return instanceBtn;\r\n}\r\n\r\n\r\n\r\nexport function setEditState(state, nxelm){\r\n\r\n  hostElm = nxelm\r\n  var url= \"nexus-tmp\";\r\n  var data;\r\n\r\n  if(getQuery(\"new\")){\r\n    data = newData();\r\n    state = null;\r\n  }  else {\r\n\r\n  if(state.dataUrl){\r\n    url =state.dataUrl;\r\n  }\r\n  data = getStoredEditData(url);\r\n  if (data === null) {\r\n    if(state.srcData !== null) {\r\n      data =state.srcData;\r\n    } else {\r\n      data = newData();\r\n        }\r\n  registerEditData(url, data);\r\n  } \r\n  }\r\n\r\n  if(!data.index){\r\n    data.index = getThreadsList(data)\r\n  }\r\n\r\n  if(state !== null && state.srcData !== null){\r\n    originData = JSON.stringify(state.srcData);\r\n  } else {\r\n    originData = JSON.stringify(data);\r\n  }\r\n\r\n  var id = data.threads[0].id;\r\n  var idx = 0;\r\n\r\n  if(state && state.threadId !== '/' && data.index.includes(state.threadId)){\r\n    id = state.threadId;\r\n    idx = data.index.indexOf(state.threadId);\r\n  }\r\n\r\n editState = newState(data, url, id, idx);\r\n setEditMenu()\r\n setThreadsForms();\r\n\r\n}\r\n\r\nexport function editIndexBlock() {\r\n \r\n  return blockWrap(\"index\", null, [authorPart(),  indexPart()], false);\r\n}\r\nexport function editLocalBlock() {\r\n  return blockWrap(\"local\", null, [editLocal], false);\r\n}\r\nexport function editDistantBlock() {\r\n  return blockWrap(\"distant\", null, [editDistant], false);\r\n}\r\n\r\n","/*! Nexus | (c) 2021 I-is-as-I-does | AGPLv3 license */\r\nimport { getTxt } from \"@i-is-as-i-does/nexus-core/src/transl/NxCoreTranslate.js\";\r\nimport { registerTranslElm } from \"@i-is-as-i-does/nexus-core/src/transl/NxElmTranslate.js\";\r\nimport { getElm } from \"../viewer/NxCommons.js\";\r\n\r\n  export function textInput(val) {\r\n    var inp = getElm(\"INPUT\", \"nx-edit-text\");\r\n    inp.type = \"text\";\r\n    inp.value = val;\r\n    return inp;\r\n  }\r\n  \r\n  export function textareaInput(val) {\r\n    var inp = getElm(\"TEXTAREA\", \"nx-edit-textarea\");\r\n    inp.textContent = val;\r\n    return inp;\r\n  }\r\n  export  function dateInput(val) {\r\n    var inp = getElm(\"INPUT\");\r\n    inp.type = \"datetime-local\";\r\n    inp.value = val;\r\n    return inp;\r\n  }\r\n  \r\n  export function baseLabel(field) {\r\n    var lb = getElm(\"LABEL\", \"nx-edit-label\");\r\n    lb.for = field;\r\n    var title = getElm(\"SPAN\", \"nx-edit-title\");\r\n    title.textContent = getTxt(field);\r\n  registerTranslElm(title, field);\r\n    lb.append(title);\r\n    return lb;\r\n  }\r\n\r\n  \r\nexport function deleteLinkBtn() {\r\n  var btn = getElm(\"BUTTON\", \"nx-delete-link\");\r\n  btn.type = \"button\";\r\n  btn.textContent = \"-\";\r\n  return btn;\r\n}\r\n\r\nexport function addBtn() {\r\n  var btn = getElm(\"BUTTON\", \"nx-add-link\");\r\n  btn.type = \"button\";\r\n  btn.textContent = \"+\";\r\n  return btn;\r\n}\r\n\r\nexport function invalidSp() {\r\n  var sp = getElm(\"SPAN\", \"nx-edit-feedback\");\r\n  return sp;\r\n}\r\n\r\n","/*! Nexus | (c) 2021-22 I-is-as-I-does | AGPLv3 license */\r\nimport { escapeRegExp, replaceDiacritics } from \"@i-is-as-i-does/jack-js/src/modules/Help.js\";\r\nimport { getSrcData, getThreadsList } from \"@i-is-as-i-does/nexus-core/src/load/NxSrc.js\";\r\nimport { selectDropDown } from \"../viewer/NxCommons.js\";\r\nimport { urlPattern } from \"@i-is-as-i-does/nexus-core/src/validt/NxSpecs.js\";\r\n\r\nconst providers = [\"youtube\", \"vimeo\", \"soundcloud\"];\r\nconst guessMap = {\r\n  image: [\"jpg\", \"jpeg\", \"gif\", \"svg\", \"png\", \"webp\"],\r\n  video: [\"mp4\", \"webm\"],\r\n  audio: [\"mp3\"],\r\n};\r\n\r\nexport function resolveMediaType(val) {\r\n  for (var p = 0; p < providers.length; p++) {\r\n    if (val.includes(providers[p])) {\r\n      return providers[p];\r\n    }\r\n  }\r\n  var ext = val.split(\".\").pop();\r\n  for (let [type, exts] of Object.entries(guessMap)) {\r\n    if (exts.includes(ext)) {\r\n      return type;\r\n    }\r\n  }\r\n\r\n  return \"page\";\r\n}\r\n\r\nexport function convertToId(title) {\r\n    return replaceDiacritics(title.trim().replace(/[\\s_]/, \"-\"));\r\n  }\r\n\r\n  /*\r\nexport function updateDistantDropdown(input, url, valid){\r\n \r\n    var prc = function(items = []){  \r\n      var ndropdown = selectDropDown(items,input,null,\"nx-edit-select-linked\");\r\n     // input.nextSibling.replaceWith(ndropdown.lastChild);\r\n      console.log()\r\n    };\r\n \r\n    if(!url || !valid){\r\n      prc();\r\n      return;\r\n      }\r\n    getSrcData(url).then((data)=> {\r\n      prc(getThreadsList(data));\r\n    }).catch(() => {\r\n      input.pattern = urlPattern+\"(?<!\"+escapeRegExp(url)+\")\";\r\n      input.dispatchEvent(new window.Event('change'));\r\n    });\r\n  }\r\n*/\r\n  \r\n  export function newState(data, url = \"nexus-tmp\", id = \"/\", idx = -1){\r\n    return {\r\n      dataUrl: url,\r\n      srcData: data,\r\n      threadId: id,\r\n      threadIndex: idx,\r\n    };\r\n  }\r\n  ","/*! Nexus | (c) 2021 I-is-as-I-does | AGPLv3 license */\r\nimport { appHeaderWithLang, getElm, instanceWrap, serviceWrap } from \"../viewer/NxCommons.js\";\r\nimport { viewerElms } from \"../viewer/NxViewer.js\";\r\nimport { editDistantBlock, editIndexBlock, editLocalBlock, getEditMenu, setEditState, instanceSwitch } from \"./NxEdit.js\";\r\n\r\nexport function editorElms(seed){\r\n\r\n    setEditState(seed.state, seed.nxelm);\r\n\r\n    var viewerInst = viewerElms(seed);\r\n  \r\n   var indexPart = getElm(\"DIV\");\r\n   indexPart.append(editIndexBlock());\r\n   var threadPart = getElm(\"DIV\");\r\n   threadPart.append(editLocalBlock(),editDistantBlock());\r\n   \r\n   var editInst = instanceWrap(appHeaderWithLang(),[serviceWrap\r\n  ([getEditMenu()], [\r\n    indexPart,\r\n    threadPart\r\n    ], [], \"edit\")]);\r\n\r\n    var editor = getElm('DIV','nx-editor')\r\n    editor.append(editInst, instanceSwitch(viewerInst, editInst))\r\n    \r\n    return editor\r\n  }\r\n  ","/*! Nexus | (c) 2021 I-is-as-I-does | AGPLv3 license */\r\nimport { randomInt, randomString } from \"@i-is-as-i-does/jack-js/src/modules/Help.js\";\r\nimport { appUrl } from \"@i-is-as-i-does/nexus-core/src/validt/NxSpecs.js\";\r\n\r\n\r\nexport function newData() {\r\n\r\n    var randomId = randomString(10);\r\n       return { \"nexus\": appUrl,\r\n        \"author\": {\r\n          \"handle\": \"Anonymous-\"+randomInt(100,999),\r\n          \"about\": \"\",\r\n          \"url\": \"http://\"\r\n        },\r\n        \"threads\": [\r\n            newThread(randomId)\r\n        ],\r\n        \"index\":[randomId]\r\n};\r\n}\r\n\r\nexport function newThread(randomId){\r\n    return {\r\n      \"id\": randomId,\r\n      \"title\": randomId,\r\n      \"description\": \"...\",\r\n      \"content\": {\r\n        \"timestamp\": new Date().toISOString().substring(0,16),\r\n        \"main\": \"...\",\r\n        \"aside\": \"\",\r\n        \"media\": {\r\n          \"url\": \"\",\r\n          \"type\": \"\",\r\n          \"caption\": \"\"\r\n        }\r\n      },\r\n      \"linked\": [\r\n      ]\r\n    };\r\n  }\r\n  "],"names":[],"sourceRoot":""}