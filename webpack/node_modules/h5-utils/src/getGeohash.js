/*
 * 获取用户地址 Geohash
 * 依赖：HybridAPI Geohash.js Promise 以及 fetch
 * 优先级：url?geohash=XXX > HybridAPI/AlipayJSAPI > Navigator
 */
const IS_IOS = /iPhone|iPad|iPod|iOS/i.test(navigator.userAgent)

const getParamHash = () => {
  let { geohash = '', latitude = '', longitude = '' } = window.UParams ? window.UParams() : {}
  if (geohash) {
    try {
      window.Geohash.decode(geohash)
    } catch (err) {
      geohash = ''
    }
  }
  if (!geohash && latitude && longitude) {
    try {
      geohash = window.Geohash.encode(latitude, longitude)
    } catch (err) {
      geohash = ''
    }
  }
  return geohash
}

const getAppHash = (timeout = 5000, interval = 100) => {
  let intervalTimer = null

  const stop = () => {
    clearInterval(intervalTimer)
  }

  return new Promise((resolve, reject) => {
    if (!window.hybridAPI) {
      return reject()
    }

    let loop = () => {
      window.hybridAPI.getGlobalGeohash()
      .then(hash => {
        if (!hash) return
        stop()
        resolve(hash)
      })
    }

    intervalTimer = setInterval(loop, interval)
    loop()

    setTimeout(() => {
      stop()
      reject()
    }, timeout)
  })
}

const getNavigatorHash = (timeout = 5000) => {
  // Read more info: https://developer.mozilla.org/zh-CN/docs/Web/API/Geolocation/getCurrentPosition
  if (!navigator.geolocation) return Promise.reject()
  return new Promise((resolve, reject) => {
    navigator.geolocation.getCurrentPosition(position => {
      if (!position.coords.latitude) {
        reject({ name: 'BROWSER_MODE_PERMISSON_FAILED' })
      }
      resolve(window.Geohash.encode(position.coords.latitude, position.coords.longitude))
    }, reject, {
      timeout,
      maximumAge: 600000, // 10min
    })
  })
}

const getAlipayHash = () => {
  // 依赖alipay-jssdk
  if (!window.ap) return Promise.reject()
  // getCurrentLocation since 10.0.18
  const isOldVersion = ap.compareVersion('10.0.18') < 0
  const timeout = 10
  const cacheTimeout = 1800 // 使用30min的缓存
  const task = isOldVersion ?
    ap.getLocation({ timeout, cacheTimeout }) :
    ap.call('getCurrentLocation', {
      timeout,
      cacheTimeout,
      requestType: 0,
      bizType: IS_IOS ? 'iOS-ele-position' : 'Android-ele-position',
    })

  return task.then(res => window.Geohash.encode(res.latitude, res.longitude))
}

const getWifikeyHash = () => {
  // 依赖wk-jssdk
  // https://public.wifi.com/serviceaccount-platform/s/module/faq.html#/4/4.1/s4c1l1
  if (!window.wk) return Promise.reject()
  return new Promise((resolve, reject) => {
    wk.ready(() => {
      wk.getLocation({
        // 默认为wgs84的gps坐标，如果要返回直接给openLocation用的火星坐标，可传入'gcj02'
        type: 'wgs84',
        success(res) {
          resolve(window.Geohash.encode(res.latitude, res.longitude))
        },
        fail: reject,
      })
    })
    wk.error(reject)
  })
}

const getDingdingHash = () => {
  // 依赖钉钉sdk
  // https://open-doc.dingtalk.com/docs/doc.htm?spm=a219a.7629140.0.0.ygyPKN&treeId=171&articleId=104917&docType=1#s0
  if (!window.dd) return Promise.reject()
  return new Promise((resolve, reject) => {
    dd.ready(() => {
      dd.device.geolocation.get({
        targetAccuracy: 200,
        coordinate: 0,
        withReGeocode: false,
        useCache: true,
        onSuccess(res) {
          resolve(window.Geohash.encode(res.latitude, res.longitude))
        },
        onFail: reject,
      })
    })
    dd.error(reject)
  })
}

const appMode = (timeout, browserModeDisabled) => {
  return getAppHash(timeout * 2 / 3)
    .catch(() => browserModeDisabled ? Promise.reject() : getNavigatorHash(timeout * 1 / 3))
}

const getGeohash = (timeout = 9000, browserModeDisabled = true) => {
  // 优先使用 URL 中传来的 geohash 参数
  let hash = getParamHash()
  if (hash) {
    return Promise.resolve(hash)
  }

  let source
  if (/Eleme/i.test(navigator.userAgent)) {
    source = appMode(timeout, browserModeDisabled)
  } else if (/AlipayClient/.test(navigator.userAgent)) {
    source = getAlipayHash()
  } else if (/wkbrowser|WiFiKey|ZeusPro/i.test(navigator.userAgent) && window.wk) {
    /**
     * 'wkbrowser': 'android',
     * 'WiFiKey': 'ios', // 国内免费版
     * 'ZeusPro': 'ios', // 国内专业版
     */
    source = getWifikeyHash()
  } else if (/AliApp\(DingTalk/.test(navigator.userAgent) && window.dd) {
    // dingding
    source = getDingdingHash()
  } else {
    source = getNavigatorHash(timeout)
  }

  return source
}

getGeohash.getParamHash = getParamHash
getGeohash.useApp = getAppHash
getGeohash.useGeoAPI = getNavigatorHash
getGeohash.useAlipay = getAlipayHash
getGeohash.useWifikey = getWifikeyHash
getGeohash.useDingding = getDingdingHash

export default getGeohash
