/*
 * 获取用户当前定位地址，返回定位经纬度
 * 依赖：HybridAPI Geohash.js Promise 以及 fetch
 * 优先级：HybridAPI/AlipayJSAPI > Navigator
 */
import compareVersion from './compareVersion'

const IS_IOS = /iPhone|iPad|iPod|iOS/i.test(navigator.userAgent)

const getAppHash = (timeout = 5000) => {
  if (!window.hybridAPI) return Promise.reject({ name: 'HYBRIDAPI_NOT_DEFINED' })
  return new Promise((resolve, reject) => {
    if (!compareVersion('7.26')) {
      hybridAPI.getSyncLocation()
      .then(response => {
        resolve({ latitude: response.lat, longitude: response.lng })
      })
    } else {
      hybridAPI.getGlobalGeohash()
      .then(hash => {
        let [ latitude, longitude ] = Geohash.decode(hash)
        resolve({ latitude, longitude })
      })
    }

    setTimeout(() => {
      reject({ name: '`getSyncLocation` method timeout' })
    }, timeout)
  })
}

const browserMode = (timeout) => {
  // Read more info: https://developer.mozilla.org/zh-CN/docs/Web/API/Geolocation/getCurrentPosition
  if (!navigator.geolocation) return Promise.reject()
  return new Promise((resolve, reject) => {
    navigator.geolocation.getCurrentPosition(position => {
      if (!position.coords.latitude) {
        reject({ name: 'BROWSER_MODE_PERMISSON_FAILED' })
      }
      resolve(position.coords)
    }, reject, {
      timeout,
      maximumAge: 600000, // 10min
    })
    // 优酷里面 getCurrentPosition 是不按标准的（超时不会执行 error 函数）
    setTimeout(reject, timeout)
  })
}

const alipayMode = () => {
  // 依赖alipay-jssdk
  if (!window.ap) return Promise.reject()
  // getCurrentLocation since 10.0.18
  const isOldVersion = ap.compareVersion('10.0.18') < 0
  const timeout = 10
  const cacheTimeout = 1800 // 使用30min的缓存
  const task = isOldVersion ?
    ap.getLocation({ timeout, cacheTimeout }) :
    ap.call('getCurrentLocation', {
      timeout,
      cacheTimeout,
      requestType: 0,
      bizType: IS_IOS ? 'iOS-ele-position' : 'Android-ele-position',
    })

  return task
}

const wifikeyMode = () => {
  // 依赖wk-jssdk
  // https://public.wifi.com/serviceaccount-platform/s/module/faq.html#/4/4.1/s4c1l1
  if (!window.wk) return Promise.reject()
  return new Promise((resolve, reject) => {
    wk.ready(() => {
      wk.getLocation({
        // 默认为wgs84的gps坐标，如果要返回直接给openLocation用的火星坐标，可传入'gcj02'
        type: 'wgs84',
        success: resolve,
        fail: reject,
      })
    })
    wk.error(reject)
  })
}

const appMode = (timeout, browserModeDisabled) => {
  return getAppHash(timeout * 2 / 3)
    .catch((error) => {
      browserModeDisabled
        ? Promise.reject(error)
        : getNavigatorHash(timeout * 1 / 3)
    })
}

const dingdingMode = () => {
  // 依赖钉钉sdk
  // https://open-doc.dingtalk.com/docs/doc.htm?spm=a219a.7629140.0.0.ygyPKN&treeId=171&articleId=104917&docType=1#s0
  if (!window.dd) return Promise.reject()
  return new Promise((resolve, reject) => {
    dd.ready(() => {
      dd.device.geolocation.get({
        targetAccuracy: 200,
        coordinate: 0,
        withReGeocode: false,
        useCache: true,
        onSuccess: resolve,
        onFail: reject,
      })
    })
    dd.error(reject)
  })
}

const getLocation = (timeout = 9000, browserModeDisabled = true) => {
  let source
  if (/Eleme/i.test(navigator.userAgent)) {
    source = appMode(timeout, browserModeDisabled)
  } else if (/AlipayClient/.test(navigator.userAgent)) {
    source = alipayMode()
  } else if (/wkbrowser|WiFiKey|ZeusPro/i.test(navigator.userAgent) && window.wk) {
    /**
     * 'wkbrowser': 'android',
     * 'WiFiKey': 'ios', // 国内免费版
     * 'ZeusPro': 'ios', // 国内专业版
     */
    source = wifikeyMode()
  } else if (/AliApp\(DingTalk/.test(navigator.userAgent) && window.dd) {
    // dingding
    source = dingdingMode()
  } else {
    source = browserMode(timeout)
  }

  return source
}

export default getLocation
